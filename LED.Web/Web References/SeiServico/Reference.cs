//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.42000
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Este código-fonte foi gerado automaticamente por Microsoft.VSDesigner, Versão 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace LED.Web.SeiServico {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SeiBinding", Namespace="Sei")]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(Feriado))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(AndamentoMarcador))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(DefinicaoMarcador))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(Cargo))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(Cidade))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(Estado))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(Pais))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(TipoConferencia))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(HipoteseLegal))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(ArquivoExtensao))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(ProtocoloBloco))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(Assinatura))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(Observacao))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(UnidadeProcedimentoAberto))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(AtributoAndamento))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(Contato))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(Campo))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(Destinatario))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(Interessado))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(Assunto))]
    public partial class SeiService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback gerarProcedimentoOperationCompleted;
        
        private System.Threading.SendOrPostCallback incluirDocumentoOperationCompleted;
        
        private System.Threading.SendOrPostCallback listarUnidadesOperationCompleted;
        
        private System.Threading.SendOrPostCallback listarTiposProcedimentoOperationCompleted;
        
        private System.Threading.SendOrPostCallback listarSeriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback listarContatosOperationCompleted;
        
        private System.Threading.SendOrPostCallback atualizarContatosOperationCompleted;
        
        private System.Threading.SendOrPostCallback consultarProcedimentoOperationCompleted;
        
        private System.Threading.SendOrPostCallback consultarProcedimentoIndividualOperationCompleted;
        
        private System.Threading.SendOrPostCallback consultarDocumentoOperationCompleted;
        
        private System.Threading.SendOrPostCallback cancelarDocumentoOperationCompleted;
        
        private System.Threading.SendOrPostCallback gerarBlocoOperationCompleted;
        
        private System.Threading.SendOrPostCallback consultarBlocoOperationCompleted;
        
        private System.Threading.SendOrPostCallback excluirBlocoOperationCompleted;
        
        private System.Threading.SendOrPostCallback excluirProcessoOperationCompleted;
        
        private System.Threading.SendOrPostCallback excluirDocumentoOperationCompleted;
        
        private System.Threading.SendOrPostCallback disponibilizarBlocoOperationCompleted;
        
        private System.Threading.SendOrPostCallback cancelarDisponibilizacaoBlocoOperationCompleted;
        
        private System.Threading.SendOrPostCallback incluirDocumentoBlocoOperationCompleted;
        
        private System.Threading.SendOrPostCallback retirarDocumentoBlocoOperationCompleted;
        
        private System.Threading.SendOrPostCallback incluirProcessoBlocoOperationCompleted;
        
        private System.Threading.SendOrPostCallback retirarProcessoBlocoOperationCompleted;
        
        private System.Threading.SendOrPostCallback reabrirProcessoOperationCompleted;
        
        private System.Threading.SendOrPostCallback concluirProcessoOperationCompleted;
        
        private System.Threading.SendOrPostCallback listarExtensoesPermitidasOperationCompleted;
        
        private System.Threading.SendOrPostCallback enviarProcessoOperationCompleted;
        
        private System.Threading.SendOrPostCallback listarUsuariosOperationCompleted;
        
        private System.Threading.SendOrPostCallback atribuirProcessoOperationCompleted;
        
        private System.Threading.SendOrPostCallback listarHipotesesLegaisOperationCompleted;
        
        private System.Threading.SendOrPostCallback listarTiposConferenciaOperationCompleted;
        
        private System.Threading.SendOrPostCallback listarPaisesOperationCompleted;
        
        private System.Threading.SendOrPostCallback listarEstadosOperationCompleted;
        
        private System.Threading.SendOrPostCallback listarCidadesOperationCompleted;
        
        private System.Threading.SendOrPostCallback listarCargosOperationCompleted;
        
        private System.Threading.SendOrPostCallback adicionarArquivoOperationCompleted;
        
        private System.Threading.SendOrPostCallback adicionarConteudoArquivoOperationCompleted;
        
        private System.Threading.SendOrPostCallback lancarAndamentoOperationCompleted;
        
        private System.Threading.SendOrPostCallback listarAndamentosOperationCompleted;
        
        private System.Threading.SendOrPostCallback bloquearProcessoOperationCompleted;
        
        private System.Threading.SendOrPostCallback desbloquearProcessoOperationCompleted;
        
        private System.Threading.SendOrPostCallback relacionarProcessoOperationCompleted;
        
        private System.Threading.SendOrPostCallback removerRelacionamentoProcessoOperationCompleted;
        
        private System.Threading.SendOrPostCallback sobrestarProcessoOperationCompleted;
        
        private System.Threading.SendOrPostCallback removerSobrestamentoProcessoOperationCompleted;
        
        private System.Threading.SendOrPostCallback anexarProcessoOperationCompleted;
        
        private System.Threading.SendOrPostCallback desanexarProcessoOperationCompleted;
        
        private System.Threading.SendOrPostCallback listarMarcadoresUnidadeOperationCompleted;
        
        private System.Threading.SendOrPostCallback definirMarcadorOperationCompleted;
        
        private System.Threading.SendOrPostCallback listarAndamentosMarcadoresOperationCompleted;
        
        private System.Threading.SendOrPostCallback consultarPublicacaoOperationCompleted;
        
        private System.Threading.SendOrPostCallback agendarPublicacaoOperationCompleted;
        
        private System.Threading.SendOrPostCallback alterarPublicacaoOperationCompleted;
        
        private System.Threading.SendOrPostCallback cancelarAgendamentoPublicacaoOperationCompleted;
        
        private System.Threading.SendOrPostCallback listarFeriadosOperationCompleted;
        
        private System.Threading.SendOrPostCallback confirmarDisponibilizacaoPublicacaoOperationCompleted;
        
        private System.Threading.SendOrPostCallback enviarEmailOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public SeiService(string ambiente) {
            //1 -- Desenvolvimento
            //2 -- Homologação
            //3 -- Produção
            if(ambiente == "1")
            {
                this.Url = global::LED.Web.Properties.Settings.Default.LED_Web_ServicoSeiDev_SeiService;
            }
            else if(ambiente == "2")
            {
                this.Url = global::LED.Web.Properties.Settings.Default.LED_Web_SeiServicoHML_SeiService;
            }
            else
            {
                this.Url = "Tem solicitar a URL de Produção para o SEI";
            }
            
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event gerarProcedimentoCompletedEventHandler gerarProcedimentoCompleted;
        
        /// <remarks/>
        public event incluirDocumentoCompletedEventHandler incluirDocumentoCompleted;
        
        /// <remarks/>
        public event listarUnidadesCompletedEventHandler listarUnidadesCompleted;
        
        /// <remarks/>
        public event listarTiposProcedimentoCompletedEventHandler listarTiposProcedimentoCompleted;
        
        /// <remarks/>
        public event listarSeriesCompletedEventHandler listarSeriesCompleted;
        
        /// <remarks/>
        public event listarContatosCompletedEventHandler listarContatosCompleted;
        
        /// <remarks/>
        public event atualizarContatosCompletedEventHandler atualizarContatosCompleted;
        
        /// <remarks/>
        public event consultarProcedimentoCompletedEventHandler consultarProcedimentoCompleted;
        
        /// <remarks/>
        public event consultarProcedimentoIndividualCompletedEventHandler consultarProcedimentoIndividualCompleted;
        
        /// <remarks/>
        public event consultarDocumentoCompletedEventHandler consultarDocumentoCompleted;
        
        /// <remarks/>
        public event cancelarDocumentoCompletedEventHandler cancelarDocumentoCompleted;
        
        /// <remarks/>
        public event gerarBlocoCompletedEventHandler gerarBlocoCompleted;
        
        /// <remarks/>
        public event consultarBlocoCompletedEventHandler consultarBlocoCompleted;
        
        /// <remarks/>
        public event excluirBlocoCompletedEventHandler excluirBlocoCompleted;
        
        /// <remarks/>
        public event excluirProcessoCompletedEventHandler excluirProcessoCompleted;
        
        /// <remarks/>
        public event excluirDocumentoCompletedEventHandler excluirDocumentoCompleted;
        
        /// <remarks/>
        public event disponibilizarBlocoCompletedEventHandler disponibilizarBlocoCompleted;
        
        /// <remarks/>
        public event cancelarDisponibilizacaoBlocoCompletedEventHandler cancelarDisponibilizacaoBlocoCompleted;
        
        /// <remarks/>
        public event incluirDocumentoBlocoCompletedEventHandler incluirDocumentoBlocoCompleted;
        
        /// <remarks/>
        public event retirarDocumentoBlocoCompletedEventHandler retirarDocumentoBlocoCompleted;
        
        /// <remarks/>
        public event incluirProcessoBlocoCompletedEventHandler incluirProcessoBlocoCompleted;
        
        /// <remarks/>
        public event retirarProcessoBlocoCompletedEventHandler retirarProcessoBlocoCompleted;
        
        /// <remarks/>
        public event reabrirProcessoCompletedEventHandler reabrirProcessoCompleted;
        
        /// <remarks/>
        public event concluirProcessoCompletedEventHandler concluirProcessoCompleted;
        
        /// <remarks/>
        public event listarExtensoesPermitidasCompletedEventHandler listarExtensoesPermitidasCompleted;
        
        /// <remarks/>
        public event enviarProcessoCompletedEventHandler enviarProcessoCompleted;
        
        /// <remarks/>
        public event listarUsuariosCompletedEventHandler listarUsuariosCompleted;
        
        /// <remarks/>
        public event atribuirProcessoCompletedEventHandler atribuirProcessoCompleted;
        
        /// <remarks/>
        public event listarHipotesesLegaisCompletedEventHandler listarHipotesesLegaisCompleted;
        
        /// <remarks/>
        public event listarTiposConferenciaCompletedEventHandler listarTiposConferenciaCompleted;
        
        /// <remarks/>
        public event listarPaisesCompletedEventHandler listarPaisesCompleted;
        
        /// <remarks/>
        public event listarEstadosCompletedEventHandler listarEstadosCompleted;
        
        /// <remarks/>
        public event listarCidadesCompletedEventHandler listarCidadesCompleted;
        
        /// <remarks/>
        public event listarCargosCompletedEventHandler listarCargosCompleted;
        
        /// <remarks/>
        public event adicionarArquivoCompletedEventHandler adicionarArquivoCompleted;
        
        /// <remarks/>
        public event adicionarConteudoArquivoCompletedEventHandler adicionarConteudoArquivoCompleted;
        
        /// <remarks/>
        public event lancarAndamentoCompletedEventHandler lancarAndamentoCompleted;
        
        /// <remarks/>
        public event listarAndamentosCompletedEventHandler listarAndamentosCompleted;
        
        /// <remarks/>
        public event bloquearProcessoCompletedEventHandler bloquearProcessoCompleted;
        
        /// <remarks/>
        public event desbloquearProcessoCompletedEventHandler desbloquearProcessoCompleted;
        
        /// <remarks/>
        public event relacionarProcessoCompletedEventHandler relacionarProcessoCompleted;
        
        /// <remarks/>
        public event removerRelacionamentoProcessoCompletedEventHandler removerRelacionamentoProcessoCompleted;
        
        /// <remarks/>
        public event sobrestarProcessoCompletedEventHandler sobrestarProcessoCompleted;
        
        /// <remarks/>
        public event removerSobrestamentoProcessoCompletedEventHandler removerSobrestamentoProcessoCompleted;
        
        /// <remarks/>
        public event anexarProcessoCompletedEventHandler anexarProcessoCompleted;
        
        /// <remarks/>
        public event desanexarProcessoCompletedEventHandler desanexarProcessoCompleted;
        
        /// <remarks/>
        public event listarMarcadoresUnidadeCompletedEventHandler listarMarcadoresUnidadeCompleted;
        
        /// <remarks/>
        public event definirMarcadorCompletedEventHandler definirMarcadorCompleted;
        
        /// <remarks/>
        public event listarAndamentosMarcadoresCompletedEventHandler listarAndamentosMarcadoresCompleted;
        
        /// <remarks/>
        public event consultarPublicacaoCompletedEventHandler consultarPublicacaoCompleted;
        
        /// <remarks/>
        public event agendarPublicacaoCompletedEventHandler agendarPublicacaoCompleted;
        
        /// <remarks/>
        public event alterarPublicacaoCompletedEventHandler alterarPublicacaoCompleted;
        
        /// <remarks/>
        public event cancelarAgendamentoPublicacaoCompletedEventHandler cancelarAgendamentoPublicacaoCompleted;
        
        /// <remarks/>
        public event listarFeriadosCompletedEventHandler listarFeriadosCompleted;
        
        /// <remarks/>
        public event confirmarDisponibilizacaoPublicacaoCompletedEventHandler confirmarDisponibilizacaoPublicacaoCompleted;
        
        /// <remarks/>
        public event enviarEmailCompletedEventHandler enviarEmailCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("SeiAction", RequestNamespace="Sei", ResponseNamespace="Sei")]
        [return: System.Xml.Serialization.SoapElementAttribute("parametros")]
        public RetornoGeracaoProcedimento gerarProcedimento(string SiglaSistema, string IdentificacaoServico, string IdUnidade, Procedimento Procedimento, Documento[] Documentos, string[] ProcedimentosRelacionados, string[] UnidadesEnvio, string SinManterAbertoUnidade, string SinEnviarEmailNotificacao, string DataRetornoProgramado, string DiasRetornoProgramado, string SinDiasUteisRetornoProgramado, string IdMarcador, string TextoMarcador) {
            object[] results = this.Invoke("gerarProcedimento", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        Procedimento,
                        Documentos,
                        ProcedimentosRelacionados,
                        UnidadesEnvio,
                        SinManterAbertoUnidade,
                        SinEnviarEmailNotificacao,
                        DataRetornoProgramado,
                        DiasRetornoProgramado,
                        SinDiasUteisRetornoProgramado,
                        IdMarcador,
                        TextoMarcador});
            return ((RetornoGeracaoProcedimento)(results[0]));
        }
        
        /// <remarks/>
        public void gerarProcedimentoAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, Procedimento Procedimento, Documento[] Documentos, string[] ProcedimentosRelacionados, string[] UnidadesEnvio, string SinManterAbertoUnidade, string SinEnviarEmailNotificacao, string DataRetornoProgramado, string DiasRetornoProgramado, string SinDiasUteisRetornoProgramado, string IdMarcador, string TextoMarcador) {
            this.gerarProcedimentoAsync(SiglaSistema, IdentificacaoServico, IdUnidade, Procedimento, Documentos, ProcedimentosRelacionados, UnidadesEnvio, SinManterAbertoUnidade, SinEnviarEmailNotificacao, DataRetornoProgramado, DiasRetornoProgramado, SinDiasUteisRetornoProgramado, IdMarcador, TextoMarcador, null);
        }
        
        /// <remarks/>
        public void gerarProcedimentoAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, Procedimento Procedimento, Documento[] Documentos, string[] ProcedimentosRelacionados, string[] UnidadesEnvio, string SinManterAbertoUnidade, string SinEnviarEmailNotificacao, string DataRetornoProgramado, string DiasRetornoProgramado, string SinDiasUteisRetornoProgramado, string IdMarcador, string TextoMarcador, object userState) {
            if ((this.gerarProcedimentoOperationCompleted == null)) {
                this.gerarProcedimentoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngerarProcedimentoOperationCompleted);
            }
            this.InvokeAsync("gerarProcedimento", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        Procedimento,
                        Documentos,
                        ProcedimentosRelacionados,
                        UnidadesEnvio,
                        SinManterAbertoUnidade,
                        SinEnviarEmailNotificacao,
                        DataRetornoProgramado,
                        DiasRetornoProgramado,
                        SinDiasUteisRetornoProgramado,
                        IdMarcador,
                        TextoMarcador}, this.gerarProcedimentoOperationCompleted, userState);
        }
        
        private void OngerarProcedimentoOperationCompleted(object arg) {
            if ((this.gerarProcedimentoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.gerarProcedimentoCompleted(this, new gerarProcedimentoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("SeiAction", RequestNamespace="Sei", ResponseNamespace="Sei")]
        [return: System.Xml.Serialization.SoapElementAttribute("parametros")]
        public RetornoInclusaoDocumento incluirDocumento(string SiglaSistema, string IdentificacaoServico, string IdUnidade, Documento Documento) {
            object[] results = this.Invoke("incluirDocumento", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        Documento});
            return ((RetornoInclusaoDocumento)(results[0]));
        }
        
        /// <remarks/>
        public void incluirDocumentoAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, Documento Documento) {
            this.incluirDocumentoAsync(SiglaSistema, IdentificacaoServico, IdUnidade, Documento, null);
        }
        
        /// <remarks/>
        public void incluirDocumentoAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, Documento Documento, object userState) {
            if ((this.incluirDocumentoOperationCompleted == null)) {
                this.incluirDocumentoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnincluirDocumentoOperationCompleted);
            }
            this.InvokeAsync("incluirDocumento", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        Documento}, this.incluirDocumentoOperationCompleted, userState);
        }
        
        private void OnincluirDocumentoOperationCompleted(object arg) {
            if ((this.incluirDocumentoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.incluirDocumentoCompleted(this, new incluirDocumentoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("SeiAction", RequestNamespace="Sei", ResponseNamespace="Sei")]
        [return: System.Xml.Serialization.SoapElementAttribute("parametros")]
        public Unidade[] listarUnidades(string SiglaSistema, string IdentificacaoServico, string IdTipoProcedimento, string IdSerie) {
            object[] results = this.Invoke("listarUnidades", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdTipoProcedimento,
                        IdSerie});
            return ((Unidade[])(results[0]));
        }
        
        /// <remarks/>
        public void listarUnidadesAsync(string SiglaSistema, string IdentificacaoServico, string IdTipoProcedimento, string IdSerie) {
            this.listarUnidadesAsync(SiglaSistema, IdentificacaoServico, IdTipoProcedimento, IdSerie, null);
        }
        
        /// <remarks/>
        public void listarUnidadesAsync(string SiglaSistema, string IdentificacaoServico, string IdTipoProcedimento, string IdSerie, object userState) {
            if ((this.listarUnidadesOperationCompleted == null)) {
                this.listarUnidadesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistarUnidadesOperationCompleted);
            }
            this.InvokeAsync("listarUnidades", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdTipoProcedimento,
                        IdSerie}, this.listarUnidadesOperationCompleted, userState);
        }
        
        private void OnlistarUnidadesOperationCompleted(object arg) {
            if ((this.listarUnidadesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listarUnidadesCompleted(this, new listarUnidadesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("SeiAction", RequestNamespace="Sei", ResponseNamespace="Sei")]
        [return: System.Xml.Serialization.SoapElementAttribute("parametros")]
        public TipoProcedimento[] listarTiposProcedimento(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string IdSerie) {
            object[] results = this.Invoke("listarTiposProcedimento", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        IdSerie});
            return ((TipoProcedimento[])(results[0]));
        }
        
        /// <remarks/>
        public void listarTiposProcedimentoAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string IdSerie) {
            this.listarTiposProcedimentoAsync(SiglaSistema, IdentificacaoServico, IdUnidade, IdSerie, null);
        }
        
        /// <remarks/>
        public void listarTiposProcedimentoAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string IdSerie, object userState) {
            if ((this.listarTiposProcedimentoOperationCompleted == null)) {
                this.listarTiposProcedimentoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistarTiposProcedimentoOperationCompleted);
            }
            this.InvokeAsync("listarTiposProcedimento", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        IdSerie}, this.listarTiposProcedimentoOperationCompleted, userState);
        }
        
        private void OnlistarTiposProcedimentoOperationCompleted(object arg) {
            if ((this.listarTiposProcedimentoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listarTiposProcedimentoCompleted(this, new listarTiposProcedimentoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("SeiAction", RequestNamespace="Sei", ResponseNamespace="Sei")]
        [return: System.Xml.Serialization.SoapElementAttribute("parametros")]
        public Serie[] listarSeries(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string IdTipoProcedimento) {
            object[] results = this.Invoke("listarSeries", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        IdTipoProcedimento});
            return ((Serie[])(results[0]));
        }
        
        /// <remarks/>
        public void listarSeriesAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string IdTipoProcedimento) {
            this.listarSeriesAsync(SiglaSistema, IdentificacaoServico, IdUnidade, IdTipoProcedimento, null);
        }
        
        /// <remarks/>
        public void listarSeriesAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string IdTipoProcedimento, object userState) {
            if ((this.listarSeriesOperationCompleted == null)) {
                this.listarSeriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistarSeriesOperationCompleted);
            }
            this.InvokeAsync("listarSeries", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        IdTipoProcedimento}, this.listarSeriesOperationCompleted, userState);
        }
        
        private void OnlistarSeriesOperationCompleted(object arg) {
            if ((this.listarSeriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listarSeriesCompleted(this, new listarSeriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("SeiAction", RequestNamespace="Sei", ResponseNamespace="Sei")]
        [return: System.Xml.Serialization.SoapElementAttribute("parametros")]
        public Contato[] listarContatos(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string IdTipoContato, string PaginaRegistros, string PaginaAtual, string Sigla, string Nome, string Cpf, string Cnpj, string Matricula, string[] IdContatos) {
            object[] results = this.Invoke("listarContatos", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        IdTipoContato,
                        PaginaRegistros,
                        PaginaAtual,
                        Sigla,
                        Nome,
                        Cpf,
                        Cnpj,
                        Matricula,
                        IdContatos});
            return ((Contato[])(results[0]));
        }
        
        /// <remarks/>
        public void listarContatosAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string IdTipoContato, string PaginaRegistros, string PaginaAtual, string Sigla, string Nome, string Cpf, string Cnpj, string Matricula, string[] IdContatos) {
            this.listarContatosAsync(SiglaSistema, IdentificacaoServico, IdUnidade, IdTipoContato, PaginaRegistros, PaginaAtual, Sigla, Nome, Cpf, Cnpj, Matricula, IdContatos, null);
        }
        
        /// <remarks/>
        public void listarContatosAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string IdTipoContato, string PaginaRegistros, string PaginaAtual, string Sigla, string Nome, string Cpf, string Cnpj, string Matricula, string[] IdContatos, object userState) {
            if ((this.listarContatosOperationCompleted == null)) {
                this.listarContatosOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistarContatosOperationCompleted);
            }
            this.InvokeAsync("listarContatos", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        IdTipoContato,
                        PaginaRegistros,
                        PaginaAtual,
                        Sigla,
                        Nome,
                        Cpf,
                        Cnpj,
                        Matricula,
                        IdContatos}, this.listarContatosOperationCompleted, userState);
        }
        
        private void OnlistarContatosOperationCompleted(object arg) {
            if ((this.listarContatosCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listarContatosCompleted(this, new listarContatosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("SeiAction", RequestNamespace="Sei", ResponseNamespace="Sei")]
        [return: System.Xml.Serialization.SoapElementAttribute("parametros")]
        public string atualizarContatos(string SiglaSistema, string IdentificacaoServico, string IdUnidade, Contato[] Contatos) {
            object[] results = this.Invoke("atualizarContatos", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        Contatos});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void atualizarContatosAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, Contato[] Contatos) {
            this.atualizarContatosAsync(SiglaSistema, IdentificacaoServico, IdUnidade, Contatos, null);
        }
        
        /// <remarks/>
        public void atualizarContatosAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, Contato[] Contatos, object userState) {
            if ((this.atualizarContatosOperationCompleted == null)) {
                this.atualizarContatosOperationCompleted = new System.Threading.SendOrPostCallback(this.OnatualizarContatosOperationCompleted);
            }
            this.InvokeAsync("atualizarContatos", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        Contatos}, this.atualizarContatosOperationCompleted, userState);
        }
        
        private void OnatualizarContatosOperationCompleted(object arg) {
            if ((this.atualizarContatosCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.atualizarContatosCompleted(this, new atualizarContatosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("SeiAction", RequestNamespace="Sei", ResponseNamespace="Sei")]
        [return: System.Xml.Serialization.SoapElementAttribute("parametros")]
        public RetornoConsultaProcedimento consultarProcedimento(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string ProtocoloProcedimento, string SinRetornarAssuntos, string SinRetornarInteressados, string SinRetornarObservacoes, string SinRetornarAndamentoGeracao, string SinRetornarAndamentoConclusao, string SinRetornarUltimoAndamento, string SinRetornarUnidadesProcedimentoAberto, string SinRetornarProcedimentosRelacionados, string SinRetornarProcedimentosAnexados) {
            object[] results = this.Invoke("consultarProcedimento", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        ProtocoloProcedimento,
                        SinRetornarAssuntos,
                        SinRetornarInteressados,
                        SinRetornarObservacoes,
                        SinRetornarAndamentoGeracao,
                        SinRetornarAndamentoConclusao,
                        SinRetornarUltimoAndamento,
                        SinRetornarUnidadesProcedimentoAberto,
                        SinRetornarProcedimentosRelacionados,
                        SinRetornarProcedimentosAnexados});
            return ((RetornoConsultaProcedimento)(results[0]));
        }
        
        /// <remarks/>
        public void consultarProcedimentoAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string ProtocoloProcedimento, string SinRetornarAssuntos, string SinRetornarInteressados, string SinRetornarObservacoes, string SinRetornarAndamentoGeracao, string SinRetornarAndamentoConclusao, string SinRetornarUltimoAndamento, string SinRetornarUnidadesProcedimentoAberto, string SinRetornarProcedimentosRelacionados, string SinRetornarProcedimentosAnexados) {
            this.consultarProcedimentoAsync(SiglaSistema, IdentificacaoServico, IdUnidade, ProtocoloProcedimento, SinRetornarAssuntos, SinRetornarInteressados, SinRetornarObservacoes, SinRetornarAndamentoGeracao, SinRetornarAndamentoConclusao, SinRetornarUltimoAndamento, SinRetornarUnidadesProcedimentoAberto, SinRetornarProcedimentosRelacionados, SinRetornarProcedimentosAnexados, null);
        }
        
        /// <remarks/>
        public void consultarProcedimentoAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string ProtocoloProcedimento, string SinRetornarAssuntos, string SinRetornarInteressados, string SinRetornarObservacoes, string SinRetornarAndamentoGeracao, string SinRetornarAndamentoConclusao, string SinRetornarUltimoAndamento, string SinRetornarUnidadesProcedimentoAberto, string SinRetornarProcedimentosRelacionados, string SinRetornarProcedimentosAnexados, object userState) {
            if ((this.consultarProcedimentoOperationCompleted == null)) {
                this.consultarProcedimentoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnconsultarProcedimentoOperationCompleted);
            }
            this.InvokeAsync("consultarProcedimento", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        ProtocoloProcedimento,
                        SinRetornarAssuntos,
                        SinRetornarInteressados,
                        SinRetornarObservacoes,
                        SinRetornarAndamentoGeracao,
                        SinRetornarAndamentoConclusao,
                        SinRetornarUltimoAndamento,
                        SinRetornarUnidadesProcedimentoAberto,
                        SinRetornarProcedimentosRelacionados,
                        SinRetornarProcedimentosAnexados}, this.consultarProcedimentoOperationCompleted, userState);
        }
        
        private void OnconsultarProcedimentoOperationCompleted(object arg) {
            if ((this.consultarProcedimentoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.consultarProcedimentoCompleted(this, new consultarProcedimentoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("SeiAction", RequestNamespace="Sei", ResponseNamespace="Sei")]
        [return: System.Xml.Serialization.SoapElementAttribute("parametros")]
        public ProcedimentoResumido consultarProcedimentoIndividual(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string IdOrgaoProcedimento, string IdTipoProcedimento, string IdOrgaoUsuario, string SiglaUsuario) {
            object[] results = this.Invoke("consultarProcedimentoIndividual", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        IdOrgaoProcedimento,
                        IdTipoProcedimento,
                        IdOrgaoUsuario,
                        SiglaUsuario});
            return ((ProcedimentoResumido)(results[0]));
        }
        
        /// <remarks/>
        public void consultarProcedimentoIndividualAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string IdOrgaoProcedimento, string IdTipoProcedimento, string IdOrgaoUsuario, string SiglaUsuario) {
            this.consultarProcedimentoIndividualAsync(SiglaSistema, IdentificacaoServico, IdUnidade, IdOrgaoProcedimento, IdTipoProcedimento, IdOrgaoUsuario, SiglaUsuario, null);
        }
        
        /// <remarks/>
        public void consultarProcedimentoIndividualAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string IdOrgaoProcedimento, string IdTipoProcedimento, string IdOrgaoUsuario, string SiglaUsuario, object userState) {
            if ((this.consultarProcedimentoIndividualOperationCompleted == null)) {
                this.consultarProcedimentoIndividualOperationCompleted = new System.Threading.SendOrPostCallback(this.OnconsultarProcedimentoIndividualOperationCompleted);
            }
            this.InvokeAsync("consultarProcedimentoIndividual", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        IdOrgaoProcedimento,
                        IdTipoProcedimento,
                        IdOrgaoUsuario,
                        SiglaUsuario}, this.consultarProcedimentoIndividualOperationCompleted, userState);
        }
        
        private void OnconsultarProcedimentoIndividualOperationCompleted(object arg) {
            if ((this.consultarProcedimentoIndividualCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.consultarProcedimentoIndividualCompleted(this, new consultarProcedimentoIndividualCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("SeiAction", RequestNamespace="Sei", ResponseNamespace="Sei")]
        [return: System.Xml.Serialization.SoapElementAttribute("parametros")]
        public RetornoConsultaDocumento consultarDocumento(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string ProtocoloDocumento, string SinRetornarAndamentoGeracao, string SinRetornarAssinaturas, string SinRetornarPublicacao, string SinRetornarCampos) {
            object[] results = this.Invoke("consultarDocumento", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        ProtocoloDocumento,
                        SinRetornarAndamentoGeracao,
                        SinRetornarAssinaturas,
                        SinRetornarPublicacao,
                        SinRetornarCampos});
            return ((RetornoConsultaDocumento)(results[0]));
        }
        
        /// <remarks/>
        public void consultarDocumentoAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string ProtocoloDocumento, string SinRetornarAndamentoGeracao, string SinRetornarAssinaturas, string SinRetornarPublicacao, string SinRetornarCampos) {
            this.consultarDocumentoAsync(SiglaSistema, IdentificacaoServico, IdUnidade, ProtocoloDocumento, SinRetornarAndamentoGeracao, SinRetornarAssinaturas, SinRetornarPublicacao, SinRetornarCampos, null);
        }
        
        /// <remarks/>
        public void consultarDocumentoAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string ProtocoloDocumento, string SinRetornarAndamentoGeracao, string SinRetornarAssinaturas, string SinRetornarPublicacao, string SinRetornarCampos, object userState) {
            if ((this.consultarDocumentoOperationCompleted == null)) {
                this.consultarDocumentoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnconsultarDocumentoOperationCompleted);
            }
            this.InvokeAsync("consultarDocumento", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        ProtocoloDocumento,
                        SinRetornarAndamentoGeracao,
                        SinRetornarAssinaturas,
                        SinRetornarPublicacao,
                        SinRetornarCampos}, this.consultarDocumentoOperationCompleted, userState);
        }
        
        private void OnconsultarDocumentoOperationCompleted(object arg) {
            if ((this.consultarDocumentoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.consultarDocumentoCompleted(this, new consultarDocumentoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("SeiAction", RequestNamespace="Sei", ResponseNamespace="Sei")]
        [return: System.Xml.Serialization.SoapElementAttribute("parametros")]
        public string cancelarDocumento(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string ProtocoloDocumento, string Motivo) {
            object[] results = this.Invoke("cancelarDocumento", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        ProtocoloDocumento,
                        Motivo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void cancelarDocumentoAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string ProtocoloDocumento, string Motivo) {
            this.cancelarDocumentoAsync(SiglaSistema, IdentificacaoServico, IdUnidade, ProtocoloDocumento, Motivo, null);
        }
        
        /// <remarks/>
        public void cancelarDocumentoAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string ProtocoloDocumento, string Motivo, object userState) {
            if ((this.cancelarDocumentoOperationCompleted == null)) {
                this.cancelarDocumentoOperationCompleted = new System.Threading.SendOrPostCallback(this.OncancelarDocumentoOperationCompleted);
            }
            this.InvokeAsync("cancelarDocumento", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        ProtocoloDocumento,
                        Motivo}, this.cancelarDocumentoOperationCompleted, userState);
        }
        
        private void OncancelarDocumentoOperationCompleted(object arg) {
            if ((this.cancelarDocumentoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cancelarDocumentoCompleted(this, new cancelarDocumentoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("SeiAction", RequestNamespace="Sei", ResponseNamespace="Sei")]
        [return: System.Xml.Serialization.SoapElementAttribute("parametros")]
        public string gerarBloco(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string Tipo, string Descricao, string[] UnidadesDisponibilizacao, string[] Documentos, string SinDisponibilizar) {
            object[] results = this.Invoke("gerarBloco", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        Tipo,
                        Descricao,
                        UnidadesDisponibilizacao,
                        Documentos,
                        SinDisponibilizar});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void gerarBlocoAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string Tipo, string Descricao, string[] UnidadesDisponibilizacao, string[] Documentos, string SinDisponibilizar) {
            this.gerarBlocoAsync(SiglaSistema, IdentificacaoServico, IdUnidade, Tipo, Descricao, UnidadesDisponibilizacao, Documentos, SinDisponibilizar, null);
        }
        
        /// <remarks/>
        public void gerarBlocoAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string Tipo, string Descricao, string[] UnidadesDisponibilizacao, string[] Documentos, string SinDisponibilizar, object userState) {
            if ((this.gerarBlocoOperationCompleted == null)) {
                this.gerarBlocoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngerarBlocoOperationCompleted);
            }
            this.InvokeAsync("gerarBloco", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        Tipo,
                        Descricao,
                        UnidadesDisponibilizacao,
                        Documentos,
                        SinDisponibilizar}, this.gerarBlocoOperationCompleted, userState);
        }
        
        private void OngerarBlocoOperationCompleted(object arg) {
            if ((this.gerarBlocoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.gerarBlocoCompleted(this, new gerarBlocoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("SeiAction", RequestNamespace="Sei", ResponseNamespace="Sei")]
        [return: System.Xml.Serialization.SoapElementAttribute("parametros")]
        public RetornoConsultaBloco consultarBloco(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string IdBloco, string SinRetornarProtocolos) {
            object[] results = this.Invoke("consultarBloco", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        IdBloco,
                        SinRetornarProtocolos});
            return ((RetornoConsultaBloco)(results[0]));
        }
        
        /// <remarks/>
        public void consultarBlocoAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string IdBloco, string SinRetornarProtocolos) {
            this.consultarBlocoAsync(SiglaSistema, IdentificacaoServico, IdUnidade, IdBloco, SinRetornarProtocolos, null);
        }
        
        /// <remarks/>
        public void consultarBlocoAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string IdBloco, string SinRetornarProtocolos, object userState) {
            if ((this.consultarBlocoOperationCompleted == null)) {
                this.consultarBlocoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnconsultarBlocoOperationCompleted);
            }
            this.InvokeAsync("consultarBloco", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        IdBloco,
                        SinRetornarProtocolos}, this.consultarBlocoOperationCompleted, userState);
        }
        
        private void OnconsultarBlocoOperationCompleted(object arg) {
            if ((this.consultarBlocoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.consultarBlocoCompleted(this, new consultarBlocoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("SeiAction", RequestNamespace="Sei", ResponseNamespace="Sei")]
        [return: System.Xml.Serialization.SoapElementAttribute("parametros")]
        public string excluirBloco(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string IdBloco) {
            object[] results = this.Invoke("excluirBloco", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        IdBloco});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void excluirBlocoAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string IdBloco) {
            this.excluirBlocoAsync(SiglaSistema, IdentificacaoServico, IdUnidade, IdBloco, null);
        }
        
        /// <remarks/>
        public void excluirBlocoAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string IdBloco, object userState) {
            if ((this.excluirBlocoOperationCompleted == null)) {
                this.excluirBlocoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnexcluirBlocoOperationCompleted);
            }
            this.InvokeAsync("excluirBloco", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        IdBloco}, this.excluirBlocoOperationCompleted, userState);
        }
        
        private void OnexcluirBlocoOperationCompleted(object arg) {
            if ((this.excluirBlocoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.excluirBlocoCompleted(this, new excluirBlocoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("SeiAction", RequestNamespace="Sei", ResponseNamespace="Sei")]
        [return: System.Xml.Serialization.SoapElementAttribute("parametros")]
        public string excluirProcesso(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string ProtocoloProcedimento) {
            object[] results = this.Invoke("excluirProcesso", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        ProtocoloProcedimento});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void excluirProcessoAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string ProtocoloProcedimento) {
            this.excluirProcessoAsync(SiglaSistema, IdentificacaoServico, IdUnidade, ProtocoloProcedimento, null);
        }
        
        /// <remarks/>
        public void excluirProcessoAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string ProtocoloProcedimento, object userState) {
            if ((this.excluirProcessoOperationCompleted == null)) {
                this.excluirProcessoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnexcluirProcessoOperationCompleted);
            }
            this.InvokeAsync("excluirProcesso", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        ProtocoloProcedimento}, this.excluirProcessoOperationCompleted, userState);
        }
        
        private void OnexcluirProcessoOperationCompleted(object arg) {
            if ((this.excluirProcessoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.excluirProcessoCompleted(this, new excluirProcessoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("SeiAction", RequestNamespace="Sei", ResponseNamespace="Sei")]
        [return: System.Xml.Serialization.SoapElementAttribute("parametros")]
        public string excluirDocumento(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string ProtocoloDocumento) {
            object[] results = this.Invoke("excluirDocumento", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        ProtocoloDocumento});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void excluirDocumentoAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string ProtocoloDocumento) {
            this.excluirDocumentoAsync(SiglaSistema, IdentificacaoServico, IdUnidade, ProtocoloDocumento, null);
        }
        
        /// <remarks/>
        public void excluirDocumentoAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string ProtocoloDocumento, object userState) {
            if ((this.excluirDocumentoOperationCompleted == null)) {
                this.excluirDocumentoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnexcluirDocumentoOperationCompleted);
            }
            this.InvokeAsync("excluirDocumento", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        ProtocoloDocumento}, this.excluirDocumentoOperationCompleted, userState);
        }
        
        private void OnexcluirDocumentoOperationCompleted(object arg) {
            if ((this.excluirDocumentoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.excluirDocumentoCompleted(this, new excluirDocumentoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("SeiAction", RequestNamespace="Sei", ResponseNamespace="Sei")]
        [return: System.Xml.Serialization.SoapElementAttribute("parametros")]
        public string disponibilizarBloco(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string IdBloco) {
            object[] results = this.Invoke("disponibilizarBloco", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        IdBloco});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void disponibilizarBlocoAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string IdBloco) {
            this.disponibilizarBlocoAsync(SiglaSistema, IdentificacaoServico, IdUnidade, IdBloco, null);
        }
        
        /// <remarks/>
        public void disponibilizarBlocoAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string IdBloco, object userState) {
            if ((this.disponibilizarBlocoOperationCompleted == null)) {
                this.disponibilizarBlocoOperationCompleted = new System.Threading.SendOrPostCallback(this.OndisponibilizarBlocoOperationCompleted);
            }
            this.InvokeAsync("disponibilizarBloco", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        IdBloco}, this.disponibilizarBlocoOperationCompleted, userState);
        }
        
        private void OndisponibilizarBlocoOperationCompleted(object arg) {
            if ((this.disponibilizarBlocoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.disponibilizarBlocoCompleted(this, new disponibilizarBlocoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("SeiAction", RequestNamespace="Sei", ResponseNamespace="Sei")]
        [return: System.Xml.Serialization.SoapElementAttribute("parametros")]
        public string cancelarDisponibilizacaoBloco(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string IdBloco) {
            object[] results = this.Invoke("cancelarDisponibilizacaoBloco", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        IdBloco});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void cancelarDisponibilizacaoBlocoAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string IdBloco) {
            this.cancelarDisponibilizacaoBlocoAsync(SiglaSistema, IdentificacaoServico, IdUnidade, IdBloco, null);
        }
        
        /// <remarks/>
        public void cancelarDisponibilizacaoBlocoAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string IdBloco, object userState) {
            if ((this.cancelarDisponibilizacaoBlocoOperationCompleted == null)) {
                this.cancelarDisponibilizacaoBlocoOperationCompleted = new System.Threading.SendOrPostCallback(this.OncancelarDisponibilizacaoBlocoOperationCompleted);
            }
            this.InvokeAsync("cancelarDisponibilizacaoBloco", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        IdBloco}, this.cancelarDisponibilizacaoBlocoOperationCompleted, userState);
        }
        
        private void OncancelarDisponibilizacaoBlocoOperationCompleted(object arg) {
            if ((this.cancelarDisponibilizacaoBlocoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cancelarDisponibilizacaoBlocoCompleted(this, new cancelarDisponibilizacaoBlocoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("SeiAction", RequestNamespace="Sei", ResponseNamespace="Sei")]
        [return: System.Xml.Serialization.SoapElementAttribute("parametros")]
        public string incluirDocumentoBloco(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string IdBloco, string ProtocoloDocumento, string Anotacao) {
            object[] results = this.Invoke("incluirDocumentoBloco", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        IdBloco,
                        ProtocoloDocumento,
                        Anotacao});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void incluirDocumentoBlocoAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string IdBloco, string ProtocoloDocumento, string Anotacao) {
            this.incluirDocumentoBlocoAsync(SiglaSistema, IdentificacaoServico, IdUnidade, IdBloco, ProtocoloDocumento, Anotacao, null);
        }
        
        /// <remarks/>
        public void incluirDocumentoBlocoAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string IdBloco, string ProtocoloDocumento, string Anotacao, object userState) {
            if ((this.incluirDocumentoBlocoOperationCompleted == null)) {
                this.incluirDocumentoBlocoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnincluirDocumentoBlocoOperationCompleted);
            }
            this.InvokeAsync("incluirDocumentoBloco", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        IdBloco,
                        ProtocoloDocumento,
                        Anotacao}, this.incluirDocumentoBlocoOperationCompleted, userState);
        }
        
        private void OnincluirDocumentoBlocoOperationCompleted(object arg) {
            if ((this.incluirDocumentoBlocoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.incluirDocumentoBlocoCompleted(this, new incluirDocumentoBlocoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("SeiAction", RequestNamespace="Sei", ResponseNamespace="Sei")]
        [return: System.Xml.Serialization.SoapElementAttribute("parametros")]
        public string retirarDocumentoBloco(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string IdBloco, string ProtocoloDocumento) {
            object[] results = this.Invoke("retirarDocumentoBloco", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        IdBloco,
                        ProtocoloDocumento});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void retirarDocumentoBlocoAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string IdBloco, string ProtocoloDocumento) {
            this.retirarDocumentoBlocoAsync(SiglaSistema, IdentificacaoServico, IdUnidade, IdBloco, ProtocoloDocumento, null);
        }
        
        /// <remarks/>
        public void retirarDocumentoBlocoAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string IdBloco, string ProtocoloDocumento, object userState) {
            if ((this.retirarDocumentoBlocoOperationCompleted == null)) {
                this.retirarDocumentoBlocoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnretirarDocumentoBlocoOperationCompleted);
            }
            this.InvokeAsync("retirarDocumentoBloco", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        IdBloco,
                        ProtocoloDocumento}, this.retirarDocumentoBlocoOperationCompleted, userState);
        }
        
        private void OnretirarDocumentoBlocoOperationCompleted(object arg) {
            if ((this.retirarDocumentoBlocoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.retirarDocumentoBlocoCompleted(this, new retirarDocumentoBlocoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("SeiAction", RequestNamespace="Sei", ResponseNamespace="Sei")]
        [return: System.Xml.Serialization.SoapElementAttribute("parametros")]
        public string incluirProcessoBloco(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string IdBloco, string ProtocoloProcedimento, string Anotacao) {
            object[] results = this.Invoke("incluirProcessoBloco", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        IdBloco,
                        ProtocoloProcedimento,
                        Anotacao});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void incluirProcessoBlocoAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string IdBloco, string ProtocoloProcedimento, string Anotacao) {
            this.incluirProcessoBlocoAsync(SiglaSistema, IdentificacaoServico, IdUnidade, IdBloco, ProtocoloProcedimento, Anotacao, null);
        }
        
        /// <remarks/>
        public void incluirProcessoBlocoAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string IdBloco, string ProtocoloProcedimento, string Anotacao, object userState) {
            if ((this.incluirProcessoBlocoOperationCompleted == null)) {
                this.incluirProcessoBlocoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnincluirProcessoBlocoOperationCompleted);
            }
            this.InvokeAsync("incluirProcessoBloco", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        IdBloco,
                        ProtocoloProcedimento,
                        Anotacao}, this.incluirProcessoBlocoOperationCompleted, userState);
        }
        
        private void OnincluirProcessoBlocoOperationCompleted(object arg) {
            if ((this.incluirProcessoBlocoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.incluirProcessoBlocoCompleted(this, new incluirProcessoBlocoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("SeiAction", RequestNamespace="Sei", ResponseNamespace="Sei")]
        [return: System.Xml.Serialization.SoapElementAttribute("parametros")]
        public string retirarProcessoBloco(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string IdBloco, string ProtocoloProcedimento) {
            object[] results = this.Invoke("retirarProcessoBloco", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        IdBloco,
                        ProtocoloProcedimento});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void retirarProcessoBlocoAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string IdBloco, string ProtocoloProcedimento) {
            this.retirarProcessoBlocoAsync(SiglaSistema, IdentificacaoServico, IdUnidade, IdBloco, ProtocoloProcedimento, null);
        }
        
        /// <remarks/>
        public void retirarProcessoBlocoAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string IdBloco, string ProtocoloProcedimento, object userState) {
            if ((this.retirarProcessoBlocoOperationCompleted == null)) {
                this.retirarProcessoBlocoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnretirarProcessoBlocoOperationCompleted);
            }
            this.InvokeAsync("retirarProcessoBloco", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        IdBloco,
                        ProtocoloProcedimento}, this.retirarProcessoBlocoOperationCompleted, userState);
        }
        
        private void OnretirarProcessoBlocoOperationCompleted(object arg) {
            if ((this.retirarProcessoBlocoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.retirarProcessoBlocoCompleted(this, new retirarProcessoBlocoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("SeiAction", RequestNamespace="Sei", ResponseNamespace="Sei")]
        [return: System.Xml.Serialization.SoapElementAttribute("parametros")]
        public string reabrirProcesso(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string ProtocoloProcedimento) {
            object[] results = this.Invoke("reabrirProcesso", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        ProtocoloProcedimento});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void reabrirProcessoAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string ProtocoloProcedimento) {
            this.reabrirProcessoAsync(SiglaSistema, IdentificacaoServico, IdUnidade, ProtocoloProcedimento, null);
        }
        
        /// <remarks/>
        public void reabrirProcessoAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string ProtocoloProcedimento, object userState) {
            if ((this.reabrirProcessoOperationCompleted == null)) {
                this.reabrirProcessoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreabrirProcessoOperationCompleted);
            }
            this.InvokeAsync("reabrirProcesso", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        ProtocoloProcedimento}, this.reabrirProcessoOperationCompleted, userState);
        }
        
        private void OnreabrirProcessoOperationCompleted(object arg) {
            if ((this.reabrirProcessoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.reabrirProcessoCompleted(this, new reabrirProcessoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("SeiAction", RequestNamespace="Sei", ResponseNamespace="Sei")]
        [return: System.Xml.Serialization.SoapElementAttribute("parametros")]
        public string concluirProcesso(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string ProtocoloProcedimento) {
            object[] results = this.Invoke("concluirProcesso", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        ProtocoloProcedimento});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void concluirProcessoAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string ProtocoloProcedimento) {
            this.concluirProcessoAsync(SiglaSistema, IdentificacaoServico, IdUnidade, ProtocoloProcedimento, null);
        }
        
        /// <remarks/>
        public void concluirProcessoAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string ProtocoloProcedimento, object userState) {
            if ((this.concluirProcessoOperationCompleted == null)) {
                this.concluirProcessoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnconcluirProcessoOperationCompleted);
            }
            this.InvokeAsync("concluirProcesso", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        ProtocoloProcedimento}, this.concluirProcessoOperationCompleted, userState);
        }
        
        private void OnconcluirProcessoOperationCompleted(object arg) {
            if ((this.concluirProcessoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.concluirProcessoCompleted(this, new concluirProcessoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("SeiAction", RequestNamespace="Sei", ResponseNamespace="Sei")]
        [return: System.Xml.Serialization.SoapElementAttribute("parametros")]
        public ArquivoExtensao[] listarExtensoesPermitidas(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string IdArquivoExtensao) {
            object[] results = this.Invoke("listarExtensoesPermitidas", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        IdArquivoExtensao});
            return ((ArquivoExtensao[])(results[0]));
        }
        
        /// <remarks/>
        public void listarExtensoesPermitidasAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string IdArquivoExtensao) {
            this.listarExtensoesPermitidasAsync(SiglaSistema, IdentificacaoServico, IdUnidade, IdArquivoExtensao, null);
        }
        
        /// <remarks/>
        public void listarExtensoesPermitidasAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string IdArquivoExtensao, object userState) {
            if ((this.listarExtensoesPermitidasOperationCompleted == null)) {
                this.listarExtensoesPermitidasOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistarExtensoesPermitidasOperationCompleted);
            }
            this.InvokeAsync("listarExtensoesPermitidas", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        IdArquivoExtensao}, this.listarExtensoesPermitidasOperationCompleted, userState);
        }
        
        private void OnlistarExtensoesPermitidasOperationCompleted(object arg) {
            if ((this.listarExtensoesPermitidasCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listarExtensoesPermitidasCompleted(this, new listarExtensoesPermitidasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("SeiAction", RequestNamespace="Sei", ResponseNamespace="Sei")]
        [return: System.Xml.Serialization.SoapElementAttribute("parametros")]
        public string enviarProcesso(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string ProtocoloProcedimento, string[] UnidadesDestino, string SinManterAbertoUnidade, string SinRemoverAnotacao, string SinEnviarEmailNotificacao, string DataRetornoProgramado, string DiasRetornoProgramado, string SinDiasUteisRetornoProgramado, string SinReabrir) {
            object[] results = this.Invoke("enviarProcesso", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        ProtocoloProcedimento,
                        UnidadesDestino,
                        SinManterAbertoUnidade,
                        SinRemoverAnotacao,
                        SinEnviarEmailNotificacao,
                        DataRetornoProgramado,
                        DiasRetornoProgramado,
                        SinDiasUteisRetornoProgramado,
                        SinReabrir});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void enviarProcessoAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string ProtocoloProcedimento, string[] UnidadesDestino, string SinManterAbertoUnidade, string SinRemoverAnotacao, string SinEnviarEmailNotificacao, string DataRetornoProgramado, string DiasRetornoProgramado, string SinDiasUteisRetornoProgramado, string SinReabrir) {
            this.enviarProcessoAsync(SiglaSistema, IdentificacaoServico, IdUnidade, ProtocoloProcedimento, UnidadesDestino, SinManterAbertoUnidade, SinRemoverAnotacao, SinEnviarEmailNotificacao, DataRetornoProgramado, DiasRetornoProgramado, SinDiasUteisRetornoProgramado, SinReabrir, null);
        }
        
        /// <remarks/>
        public void enviarProcessoAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string ProtocoloProcedimento, string[] UnidadesDestino, string SinManterAbertoUnidade, string SinRemoverAnotacao, string SinEnviarEmailNotificacao, string DataRetornoProgramado, string DiasRetornoProgramado, string SinDiasUteisRetornoProgramado, string SinReabrir, object userState) {
            if ((this.enviarProcessoOperationCompleted == null)) {
                this.enviarProcessoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnenviarProcessoOperationCompleted);
            }
            this.InvokeAsync("enviarProcesso", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        ProtocoloProcedimento,
                        UnidadesDestino,
                        SinManterAbertoUnidade,
                        SinRemoverAnotacao,
                        SinEnviarEmailNotificacao,
                        DataRetornoProgramado,
                        DiasRetornoProgramado,
                        SinDiasUteisRetornoProgramado,
                        SinReabrir}, this.enviarProcessoOperationCompleted, userState);
        }
        
        private void OnenviarProcessoOperationCompleted(object arg) {
            if ((this.enviarProcessoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.enviarProcessoCompleted(this, new enviarProcessoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("SeiAction", RequestNamespace="Sei", ResponseNamespace="Sei")]
        [return: System.Xml.Serialization.SoapElementAttribute("parametros")]
        public Usuario[] listarUsuarios(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string IdUsuario) {
            object[] results = this.Invoke("listarUsuarios", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        IdUsuario});
            return ((Usuario[])(results[0]));
        }
        
        /// <remarks/>
        public void listarUsuariosAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string IdUsuario) {
            this.listarUsuariosAsync(SiglaSistema, IdentificacaoServico, IdUnidade, IdUsuario, null);
        }
        
        /// <remarks/>
        public void listarUsuariosAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string IdUsuario, object userState) {
            if ((this.listarUsuariosOperationCompleted == null)) {
                this.listarUsuariosOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistarUsuariosOperationCompleted);
            }
            this.InvokeAsync("listarUsuarios", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        IdUsuario}, this.listarUsuariosOperationCompleted, userState);
        }
        
        private void OnlistarUsuariosOperationCompleted(object arg) {
            if ((this.listarUsuariosCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listarUsuariosCompleted(this, new listarUsuariosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("SeiAction", RequestNamespace="Sei", ResponseNamespace="Sei")]
        [return: System.Xml.Serialization.SoapElementAttribute("parametros")]
        public string atribuirProcesso(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string ProtocoloProcedimento, string IdUsuario, string SinReabrir) {
            object[] results = this.Invoke("atribuirProcesso", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        ProtocoloProcedimento,
                        IdUsuario,
                        SinReabrir});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void atribuirProcessoAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string ProtocoloProcedimento, string IdUsuario, string SinReabrir) {
            this.atribuirProcessoAsync(SiglaSistema, IdentificacaoServico, IdUnidade, ProtocoloProcedimento, IdUsuario, SinReabrir, null);
        }
        
        /// <remarks/>
        public void atribuirProcessoAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string ProtocoloProcedimento, string IdUsuario, string SinReabrir, object userState) {
            if ((this.atribuirProcessoOperationCompleted == null)) {
                this.atribuirProcessoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnatribuirProcessoOperationCompleted);
            }
            this.InvokeAsync("atribuirProcesso", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        ProtocoloProcedimento,
                        IdUsuario,
                        SinReabrir}, this.atribuirProcessoOperationCompleted, userState);
        }
        
        private void OnatribuirProcessoOperationCompleted(object arg) {
            if ((this.atribuirProcessoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.atribuirProcessoCompleted(this, new atribuirProcessoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("SeiAction", RequestNamespace="Sei", ResponseNamespace="Sei")]
        [return: System.Xml.Serialization.SoapElementAttribute("parametros")]
        public HipoteseLegal[] listarHipotesesLegais(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string NivelAcesso) {
            object[] results = this.Invoke("listarHipotesesLegais", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        NivelAcesso});
            return ((HipoteseLegal[])(results[0]));
        }
        
        /// <remarks/>
        public void listarHipotesesLegaisAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string NivelAcesso) {
            this.listarHipotesesLegaisAsync(SiglaSistema, IdentificacaoServico, IdUnidade, NivelAcesso, null);
        }
        
        /// <remarks/>
        public void listarHipotesesLegaisAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string NivelAcesso, object userState) {
            if ((this.listarHipotesesLegaisOperationCompleted == null)) {
                this.listarHipotesesLegaisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistarHipotesesLegaisOperationCompleted);
            }
            this.InvokeAsync("listarHipotesesLegais", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        NivelAcesso}, this.listarHipotesesLegaisOperationCompleted, userState);
        }
        
        private void OnlistarHipotesesLegaisOperationCompleted(object arg) {
            if ((this.listarHipotesesLegaisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listarHipotesesLegaisCompleted(this, new listarHipotesesLegaisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("SeiAction", RequestNamespace="Sei", ResponseNamespace="Sei")]
        [return: System.Xml.Serialization.SoapElementAttribute("parametros")]
        public TipoConferencia[] listarTiposConferencia(string SiglaSistema, string IdentificacaoServico, string IdUnidade) {
            object[] results = this.Invoke("listarTiposConferencia", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade});
            return ((TipoConferencia[])(results[0]));
        }
        
        /// <remarks/>
        public void listarTiposConferenciaAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade) {
            this.listarTiposConferenciaAsync(SiglaSistema, IdentificacaoServico, IdUnidade, null);
        }
        
        /// <remarks/>
        public void listarTiposConferenciaAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, object userState) {
            if ((this.listarTiposConferenciaOperationCompleted == null)) {
                this.listarTiposConferenciaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistarTiposConferenciaOperationCompleted);
            }
            this.InvokeAsync("listarTiposConferencia", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade}, this.listarTiposConferenciaOperationCompleted, userState);
        }
        
        private void OnlistarTiposConferenciaOperationCompleted(object arg) {
            if ((this.listarTiposConferenciaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listarTiposConferenciaCompleted(this, new listarTiposConferenciaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("SeiAction", RequestNamespace="Sei", ResponseNamespace="Sei")]
        [return: System.Xml.Serialization.SoapElementAttribute("parametros")]
        public Pais[] listarPaises(string SiglaSistema, string IdentificacaoServico, string IdUnidade) {
            object[] results = this.Invoke("listarPaises", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade});
            return ((Pais[])(results[0]));
        }
        
        /// <remarks/>
        public void listarPaisesAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade) {
            this.listarPaisesAsync(SiglaSistema, IdentificacaoServico, IdUnidade, null);
        }
        
        /// <remarks/>
        public void listarPaisesAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, object userState) {
            if ((this.listarPaisesOperationCompleted == null)) {
                this.listarPaisesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistarPaisesOperationCompleted);
            }
            this.InvokeAsync("listarPaises", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade}, this.listarPaisesOperationCompleted, userState);
        }
        
        private void OnlistarPaisesOperationCompleted(object arg) {
            if ((this.listarPaisesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listarPaisesCompleted(this, new listarPaisesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("SeiAction", RequestNamespace="Sei", ResponseNamespace="Sei")]
        [return: System.Xml.Serialization.SoapElementAttribute("parametros")]
        public Estado[] listarEstados(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string IdPais) {
            object[] results = this.Invoke("listarEstados", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        IdPais});
            return ((Estado[])(results[0]));
        }
        
        /// <remarks/>
        public void listarEstadosAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string IdPais) {
            this.listarEstadosAsync(SiglaSistema, IdentificacaoServico, IdUnidade, IdPais, null);
        }
        
        /// <remarks/>
        public void listarEstadosAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string IdPais, object userState) {
            if ((this.listarEstadosOperationCompleted == null)) {
                this.listarEstadosOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistarEstadosOperationCompleted);
            }
            this.InvokeAsync("listarEstados", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        IdPais}, this.listarEstadosOperationCompleted, userState);
        }
        
        private void OnlistarEstadosOperationCompleted(object arg) {
            if ((this.listarEstadosCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listarEstadosCompleted(this, new listarEstadosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("SeiAction", RequestNamespace="Sei", ResponseNamespace="Sei")]
        [return: System.Xml.Serialization.SoapElementAttribute("parametros")]
        public Cidade[] listarCidades(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string IdPais, string IdEstado) {
            object[] results = this.Invoke("listarCidades", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        IdPais,
                        IdEstado});
            return ((Cidade[])(results[0]));
        }
        
        /// <remarks/>
        public void listarCidadesAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string IdPais, string IdEstado) {
            this.listarCidadesAsync(SiglaSistema, IdentificacaoServico, IdUnidade, IdPais, IdEstado, null);
        }
        
        /// <remarks/>
        public void listarCidadesAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string IdPais, string IdEstado, object userState) {
            if ((this.listarCidadesOperationCompleted == null)) {
                this.listarCidadesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistarCidadesOperationCompleted);
            }
            this.InvokeAsync("listarCidades", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        IdPais,
                        IdEstado}, this.listarCidadesOperationCompleted, userState);
        }
        
        private void OnlistarCidadesOperationCompleted(object arg) {
            if ((this.listarCidadesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listarCidadesCompleted(this, new listarCidadesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("SeiAction", RequestNamespace="Sei", ResponseNamespace="Sei")]
        [return: System.Xml.Serialization.SoapElementAttribute("parametros")]
        public Cargo[] listarCargos(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string IdCargo) {
            object[] results = this.Invoke("listarCargos", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        IdCargo});
            return ((Cargo[])(results[0]));
        }
        
        /// <remarks/>
        public void listarCargosAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string IdCargo) {
            this.listarCargosAsync(SiglaSistema, IdentificacaoServico, IdUnidade, IdCargo, null);
        }
        
        /// <remarks/>
        public void listarCargosAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string IdCargo, object userState) {
            if ((this.listarCargosOperationCompleted == null)) {
                this.listarCargosOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistarCargosOperationCompleted);
            }
            this.InvokeAsync("listarCargos", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        IdCargo}, this.listarCargosOperationCompleted, userState);
        }
        
        private void OnlistarCargosOperationCompleted(object arg) {
            if ((this.listarCargosCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listarCargosCompleted(this, new listarCargosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("SeiAction", RequestNamespace="Sei", ResponseNamespace="Sei")]
        [return: System.Xml.Serialization.SoapElementAttribute("parametros")]
        public string adicionarArquivo(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string Nome, string Tamanho, string Hash, string Conteudo) {
            object[] results = this.Invoke("adicionarArquivo", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        Nome,
                        Tamanho,
                        Hash,
                        Conteudo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void adicionarArquivoAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string Nome, string Tamanho, string Hash, string Conteudo) {
            this.adicionarArquivoAsync(SiglaSistema, IdentificacaoServico, IdUnidade, Nome, Tamanho, Hash, Conteudo, null);
        }
        
        /// <remarks/>
        public void adicionarArquivoAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string Nome, string Tamanho, string Hash, string Conteudo, object userState) {
            if ((this.adicionarArquivoOperationCompleted == null)) {
                this.adicionarArquivoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnadicionarArquivoOperationCompleted);
            }
            this.InvokeAsync("adicionarArquivo", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        Nome,
                        Tamanho,
                        Hash,
                        Conteudo}, this.adicionarArquivoOperationCompleted, userState);
        }
        
        private void OnadicionarArquivoOperationCompleted(object arg) {
            if ((this.adicionarArquivoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.adicionarArquivoCompleted(this, new adicionarArquivoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("SeiAction", RequestNamespace="Sei", ResponseNamespace="Sei")]
        [return: System.Xml.Serialization.SoapElementAttribute("parametros")]
        public string adicionarConteudoArquivo(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string IdArquivo, string Conteudo) {
            object[] results = this.Invoke("adicionarConteudoArquivo", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        IdArquivo,
                        Conteudo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void adicionarConteudoArquivoAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string IdArquivo, string Conteudo) {
            this.adicionarConteudoArquivoAsync(SiglaSistema, IdentificacaoServico, IdUnidade, IdArquivo, Conteudo, null);
        }
        
        /// <remarks/>
        public void adicionarConteudoArquivoAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string IdArquivo, string Conteudo, object userState) {
            if ((this.adicionarConteudoArquivoOperationCompleted == null)) {
                this.adicionarConteudoArquivoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnadicionarConteudoArquivoOperationCompleted);
            }
            this.InvokeAsync("adicionarConteudoArquivo", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        IdArquivo,
                        Conteudo}, this.adicionarConteudoArquivoOperationCompleted, userState);
        }
        
        private void OnadicionarConteudoArquivoOperationCompleted(object arg) {
            if ((this.adicionarConteudoArquivoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.adicionarConteudoArquivoCompleted(this, new adicionarConteudoArquivoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("SeiAction", RequestNamespace="Sei", ResponseNamespace="Sei")]
        [return: System.Xml.Serialization.SoapElementAttribute("parametros")]
        public Andamento lancarAndamento(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string ProtocoloProcedimento, string IdTarefa, string IdTarefaModulo, AtributoAndamento[] Atributos) {
            object[] results = this.Invoke("lancarAndamento", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        ProtocoloProcedimento,
                        IdTarefa,
                        IdTarefaModulo,
                        Atributos});
            return ((Andamento)(results[0]));
        }
        
        /// <remarks/>
        public void lancarAndamentoAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string ProtocoloProcedimento, string IdTarefa, string IdTarefaModulo, AtributoAndamento[] Atributos) {
            this.lancarAndamentoAsync(SiglaSistema, IdentificacaoServico, IdUnidade, ProtocoloProcedimento, IdTarefa, IdTarefaModulo, Atributos, null);
        }
        
        /// <remarks/>
        public void lancarAndamentoAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string ProtocoloProcedimento, string IdTarefa, string IdTarefaModulo, AtributoAndamento[] Atributos, object userState) {
            if ((this.lancarAndamentoOperationCompleted == null)) {
                this.lancarAndamentoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlancarAndamentoOperationCompleted);
            }
            this.InvokeAsync("lancarAndamento", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        ProtocoloProcedimento,
                        IdTarefa,
                        IdTarefaModulo,
                        Atributos}, this.lancarAndamentoOperationCompleted, userState);
        }
        
        private void OnlancarAndamentoOperationCompleted(object arg) {
            if ((this.lancarAndamentoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.lancarAndamentoCompleted(this, new lancarAndamentoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("SeiAction", RequestNamespace="Sei", ResponseNamespace="Sei")]
        [return: System.Xml.Serialization.SoapElementAttribute("parametros")]
        public Andamento[] listarAndamentos(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string ProtocoloProcedimento, string SinRetornarAtributos, string[] Andamentos, string[] Tarefas, string[] TarefasModulos) {
            object[] results = this.Invoke("listarAndamentos", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        ProtocoloProcedimento,
                        SinRetornarAtributos,
                        Andamentos,
                        Tarefas,
                        TarefasModulos});
            return ((Andamento[])(results[0]));
        }
        
        /// <remarks/>
        public void listarAndamentosAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string ProtocoloProcedimento, string SinRetornarAtributos, string[] Andamentos, string[] Tarefas, string[] TarefasModulos) {
            this.listarAndamentosAsync(SiglaSistema, IdentificacaoServico, IdUnidade, ProtocoloProcedimento, SinRetornarAtributos, Andamentos, Tarefas, TarefasModulos, null);
        }
        
        /// <remarks/>
        public void listarAndamentosAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string ProtocoloProcedimento, string SinRetornarAtributos, string[] Andamentos, string[] Tarefas, string[] TarefasModulos, object userState) {
            if ((this.listarAndamentosOperationCompleted == null)) {
                this.listarAndamentosOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistarAndamentosOperationCompleted);
            }
            this.InvokeAsync("listarAndamentos", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        ProtocoloProcedimento,
                        SinRetornarAtributos,
                        Andamentos,
                        Tarefas,
                        TarefasModulos}, this.listarAndamentosOperationCompleted, userState);
        }
        
        private void OnlistarAndamentosOperationCompleted(object arg) {
            if ((this.listarAndamentosCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listarAndamentosCompleted(this, new listarAndamentosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("SeiAction", RequestNamespace="Sei", ResponseNamespace="Sei")]
        [return: System.Xml.Serialization.SoapElementAttribute("parametros")]
        public string bloquearProcesso(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string ProtocoloProcedimento) {
            object[] results = this.Invoke("bloquearProcesso", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        ProtocoloProcedimento});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void bloquearProcessoAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string ProtocoloProcedimento) {
            this.bloquearProcessoAsync(SiglaSistema, IdentificacaoServico, IdUnidade, ProtocoloProcedimento, null);
        }
        
        /// <remarks/>
        public void bloquearProcessoAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string ProtocoloProcedimento, object userState) {
            if ((this.bloquearProcessoOperationCompleted == null)) {
                this.bloquearProcessoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnbloquearProcessoOperationCompleted);
            }
            this.InvokeAsync("bloquearProcesso", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        ProtocoloProcedimento}, this.bloquearProcessoOperationCompleted, userState);
        }
        
        private void OnbloquearProcessoOperationCompleted(object arg) {
            if ((this.bloquearProcessoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.bloquearProcessoCompleted(this, new bloquearProcessoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("SeiAction", RequestNamespace="Sei", ResponseNamespace="Sei")]
        [return: System.Xml.Serialization.SoapElementAttribute("parametros")]
        public string desbloquearProcesso(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string ProtocoloProcedimento) {
            object[] results = this.Invoke("desbloquearProcesso", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        ProtocoloProcedimento});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void desbloquearProcessoAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string ProtocoloProcedimento) {
            this.desbloquearProcessoAsync(SiglaSistema, IdentificacaoServico, IdUnidade, ProtocoloProcedimento, null);
        }
        
        /// <remarks/>
        public void desbloquearProcessoAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string ProtocoloProcedimento, object userState) {
            if ((this.desbloquearProcessoOperationCompleted == null)) {
                this.desbloquearProcessoOperationCompleted = new System.Threading.SendOrPostCallback(this.OndesbloquearProcessoOperationCompleted);
            }
            this.InvokeAsync("desbloquearProcesso", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        ProtocoloProcedimento}, this.desbloquearProcessoOperationCompleted, userState);
        }
        
        private void OndesbloquearProcessoOperationCompleted(object arg) {
            if ((this.desbloquearProcessoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.desbloquearProcessoCompleted(this, new desbloquearProcessoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("SeiAction", RequestNamespace="Sei", ResponseNamespace="Sei")]
        [return: System.Xml.Serialization.SoapElementAttribute("parametros")]
        public string relacionarProcesso(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string ProtocoloProcedimento1, string ProtocoloProcedimento2) {
            object[] results = this.Invoke("relacionarProcesso", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        ProtocoloProcedimento1,
                        ProtocoloProcedimento2});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void relacionarProcessoAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string ProtocoloProcedimento1, string ProtocoloProcedimento2) {
            this.relacionarProcessoAsync(SiglaSistema, IdentificacaoServico, IdUnidade, ProtocoloProcedimento1, ProtocoloProcedimento2, null);
        }
        
        /// <remarks/>
        public void relacionarProcessoAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string ProtocoloProcedimento1, string ProtocoloProcedimento2, object userState) {
            if ((this.relacionarProcessoOperationCompleted == null)) {
                this.relacionarProcessoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrelacionarProcessoOperationCompleted);
            }
            this.InvokeAsync("relacionarProcesso", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        ProtocoloProcedimento1,
                        ProtocoloProcedimento2}, this.relacionarProcessoOperationCompleted, userState);
        }
        
        private void OnrelacionarProcessoOperationCompleted(object arg) {
            if ((this.relacionarProcessoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.relacionarProcessoCompleted(this, new relacionarProcessoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("SeiAction", RequestNamespace="Sei", ResponseNamespace="Sei")]
        [return: System.Xml.Serialization.SoapElementAttribute("parametros")]
        public string removerRelacionamentoProcesso(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string ProtocoloProcedimento1, string ProtocoloProcedimento2) {
            object[] results = this.Invoke("removerRelacionamentoProcesso", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        ProtocoloProcedimento1,
                        ProtocoloProcedimento2});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void removerRelacionamentoProcessoAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string ProtocoloProcedimento1, string ProtocoloProcedimento2) {
            this.removerRelacionamentoProcessoAsync(SiglaSistema, IdentificacaoServico, IdUnidade, ProtocoloProcedimento1, ProtocoloProcedimento2, null);
        }
        
        /// <remarks/>
        public void removerRelacionamentoProcessoAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string ProtocoloProcedimento1, string ProtocoloProcedimento2, object userState) {
            if ((this.removerRelacionamentoProcessoOperationCompleted == null)) {
                this.removerRelacionamentoProcessoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoverRelacionamentoProcessoOperationCompleted);
            }
            this.InvokeAsync("removerRelacionamentoProcesso", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        ProtocoloProcedimento1,
                        ProtocoloProcedimento2}, this.removerRelacionamentoProcessoOperationCompleted, userState);
        }
        
        private void OnremoverRelacionamentoProcessoOperationCompleted(object arg) {
            if ((this.removerRelacionamentoProcessoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removerRelacionamentoProcessoCompleted(this, new removerRelacionamentoProcessoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("SeiAction", RequestNamespace="Sei", ResponseNamespace="Sei")]
        [return: System.Xml.Serialization.SoapElementAttribute("parametros")]
        public string sobrestarProcesso(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string ProtocoloProcedimento, string ProtocoloProcedimentoVinculado, string Motivo) {
            object[] results = this.Invoke("sobrestarProcesso", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        ProtocoloProcedimento,
                        ProtocoloProcedimentoVinculado,
                        Motivo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sobrestarProcessoAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string ProtocoloProcedimento, string ProtocoloProcedimentoVinculado, string Motivo) {
            this.sobrestarProcessoAsync(SiglaSistema, IdentificacaoServico, IdUnidade, ProtocoloProcedimento, ProtocoloProcedimentoVinculado, Motivo, null);
        }
        
        /// <remarks/>
        public void sobrestarProcessoAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string ProtocoloProcedimento, string ProtocoloProcedimentoVinculado, string Motivo, object userState) {
            if ((this.sobrestarProcessoOperationCompleted == null)) {
                this.sobrestarProcessoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsobrestarProcessoOperationCompleted);
            }
            this.InvokeAsync("sobrestarProcesso", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        ProtocoloProcedimento,
                        ProtocoloProcedimentoVinculado,
                        Motivo}, this.sobrestarProcessoOperationCompleted, userState);
        }
        
        private void OnsobrestarProcessoOperationCompleted(object arg) {
            if ((this.sobrestarProcessoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sobrestarProcessoCompleted(this, new sobrestarProcessoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("SeiAction", RequestNamespace="Sei", ResponseNamespace="Sei")]
        [return: System.Xml.Serialization.SoapElementAttribute("parametros")]
        public string removerSobrestamentoProcesso(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string ProtocoloProcedimento) {
            object[] results = this.Invoke("removerSobrestamentoProcesso", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        ProtocoloProcedimento});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void removerSobrestamentoProcessoAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string ProtocoloProcedimento) {
            this.removerSobrestamentoProcessoAsync(SiglaSistema, IdentificacaoServico, IdUnidade, ProtocoloProcedimento, null);
        }
        
        /// <remarks/>
        public void removerSobrestamentoProcessoAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string ProtocoloProcedimento, object userState) {
            if ((this.removerSobrestamentoProcessoOperationCompleted == null)) {
                this.removerSobrestamentoProcessoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoverSobrestamentoProcessoOperationCompleted);
            }
            this.InvokeAsync("removerSobrestamentoProcesso", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        ProtocoloProcedimento}, this.removerSobrestamentoProcessoOperationCompleted, userState);
        }
        
        private void OnremoverSobrestamentoProcessoOperationCompleted(object arg) {
            if ((this.removerSobrestamentoProcessoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removerSobrestamentoProcessoCompleted(this, new removerSobrestamentoProcessoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("SeiAction", RequestNamespace="Sei", ResponseNamespace="Sei")]
        [return: System.Xml.Serialization.SoapElementAttribute("parametros")]
        public string anexarProcesso(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string ProtocoloProcedimentoPrincipal, string ProtocoloProcedimentoAnexado) {
            object[] results = this.Invoke("anexarProcesso", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        ProtocoloProcedimentoPrincipal,
                        ProtocoloProcedimentoAnexado});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void anexarProcessoAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string ProtocoloProcedimentoPrincipal, string ProtocoloProcedimentoAnexado) {
            this.anexarProcessoAsync(SiglaSistema, IdentificacaoServico, IdUnidade, ProtocoloProcedimentoPrincipal, ProtocoloProcedimentoAnexado, null);
        }
        
        /// <remarks/>
        public void anexarProcessoAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string ProtocoloProcedimentoPrincipal, string ProtocoloProcedimentoAnexado, object userState) {
            if ((this.anexarProcessoOperationCompleted == null)) {
                this.anexarProcessoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnanexarProcessoOperationCompleted);
            }
            this.InvokeAsync("anexarProcesso", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        ProtocoloProcedimentoPrincipal,
                        ProtocoloProcedimentoAnexado}, this.anexarProcessoOperationCompleted, userState);
        }
        
        private void OnanexarProcessoOperationCompleted(object arg) {
            if ((this.anexarProcessoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.anexarProcessoCompleted(this, new anexarProcessoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("SeiAction", RequestNamespace="Sei", ResponseNamespace="Sei")]
        [return: System.Xml.Serialization.SoapElementAttribute("parametros")]
        public string desanexarProcesso(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string ProtocoloProcedimentoPrincipal, string ProtocoloProcedimentoAnexado, string Motivo) {
            object[] results = this.Invoke("desanexarProcesso", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        ProtocoloProcedimentoPrincipal,
                        ProtocoloProcedimentoAnexado,
                        Motivo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void desanexarProcessoAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string ProtocoloProcedimentoPrincipal, string ProtocoloProcedimentoAnexado, string Motivo) {
            this.desanexarProcessoAsync(SiglaSistema, IdentificacaoServico, IdUnidade, ProtocoloProcedimentoPrincipal, ProtocoloProcedimentoAnexado, Motivo, null);
        }
        
        /// <remarks/>
        public void desanexarProcessoAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string ProtocoloProcedimentoPrincipal, string ProtocoloProcedimentoAnexado, string Motivo, object userState) {
            if ((this.desanexarProcessoOperationCompleted == null)) {
                this.desanexarProcessoOperationCompleted = new System.Threading.SendOrPostCallback(this.OndesanexarProcessoOperationCompleted);
            }
            this.InvokeAsync("desanexarProcesso", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        ProtocoloProcedimentoPrincipal,
                        ProtocoloProcedimentoAnexado,
                        Motivo}, this.desanexarProcessoOperationCompleted, userState);
        }
        
        private void OndesanexarProcessoOperationCompleted(object arg) {
            if ((this.desanexarProcessoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.desanexarProcessoCompleted(this, new desanexarProcessoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("SeiAction", RequestNamespace="Sei", ResponseNamespace="Sei")]
        [return: System.Xml.Serialization.SoapElementAttribute("parametros")]
        public Marcador[] listarMarcadoresUnidade(string SiglaSistema, string IdentificacaoServico, string IdUnidade) {
            object[] results = this.Invoke("listarMarcadoresUnidade", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade});
            return ((Marcador[])(results[0]));
        }
        
        /// <remarks/>
        public void listarMarcadoresUnidadeAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade) {
            this.listarMarcadoresUnidadeAsync(SiglaSistema, IdentificacaoServico, IdUnidade, null);
        }
        
        /// <remarks/>
        public void listarMarcadoresUnidadeAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, object userState) {
            if ((this.listarMarcadoresUnidadeOperationCompleted == null)) {
                this.listarMarcadoresUnidadeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistarMarcadoresUnidadeOperationCompleted);
            }
            this.InvokeAsync("listarMarcadoresUnidade", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade}, this.listarMarcadoresUnidadeOperationCompleted, userState);
        }
        
        private void OnlistarMarcadoresUnidadeOperationCompleted(object arg) {
            if ((this.listarMarcadoresUnidadeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listarMarcadoresUnidadeCompleted(this, new listarMarcadoresUnidadeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("SeiAction", RequestNamespace="Sei", ResponseNamespace="Sei")]
        [return: System.Xml.Serialization.SoapElementAttribute("parametros")]
        public string definirMarcador(string SiglaSistema, string IdentificacaoServico, string IdUnidade, DefinicaoMarcador[] Definicoes) {
            object[] results = this.Invoke("definirMarcador", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        Definicoes});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void definirMarcadorAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, DefinicaoMarcador[] Definicoes) {
            this.definirMarcadorAsync(SiglaSistema, IdentificacaoServico, IdUnidade, Definicoes, null);
        }
        
        /// <remarks/>
        public void definirMarcadorAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, DefinicaoMarcador[] Definicoes, object userState) {
            if ((this.definirMarcadorOperationCompleted == null)) {
                this.definirMarcadorOperationCompleted = new System.Threading.SendOrPostCallback(this.OndefinirMarcadorOperationCompleted);
            }
            this.InvokeAsync("definirMarcador", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        Definicoes}, this.definirMarcadorOperationCompleted, userState);
        }
        
        private void OndefinirMarcadorOperationCompleted(object arg) {
            if ((this.definirMarcadorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.definirMarcadorCompleted(this, new definirMarcadorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("SeiAction", RequestNamespace="Sei", ResponseNamespace="Sei")]
        [return: System.Xml.Serialization.SoapElementAttribute("parametros")]
        public AndamentoMarcador[] listarAndamentosMarcadores(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string ProtocoloProcedimento, string[] Marcadores) {
            object[] results = this.Invoke("listarAndamentosMarcadores", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        ProtocoloProcedimento,
                        Marcadores});
            return ((AndamentoMarcador[])(results[0]));
        }
        
        /// <remarks/>
        public void listarAndamentosMarcadoresAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string ProtocoloProcedimento, string[] Marcadores) {
            this.listarAndamentosMarcadoresAsync(SiglaSistema, IdentificacaoServico, IdUnidade, ProtocoloProcedimento, Marcadores, null);
        }
        
        /// <remarks/>
        public void listarAndamentosMarcadoresAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string ProtocoloProcedimento, string[] Marcadores, object userState) {
            if ((this.listarAndamentosMarcadoresOperationCompleted == null)) {
                this.listarAndamentosMarcadoresOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistarAndamentosMarcadoresOperationCompleted);
            }
            this.InvokeAsync("listarAndamentosMarcadores", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        ProtocoloProcedimento,
                        Marcadores}, this.listarAndamentosMarcadoresOperationCompleted, userState);
        }
        
        private void OnlistarAndamentosMarcadoresOperationCompleted(object arg) {
            if ((this.listarAndamentosMarcadoresCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listarAndamentosMarcadoresCompleted(this, new listarAndamentosMarcadoresCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("SeiAction", RequestNamespace="Sei", ResponseNamespace="Sei")]
        [return: System.Xml.Serialization.SoapElementAttribute("parametros")]
        public RetornoConsultaPublicacao consultarPublicacao(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string IdPublicacao, string IdDocumento, string ProtocoloDocumento, string SinRetornarAndamento, string SinRetornarAssinaturas) {
            object[] results = this.Invoke("consultarPublicacao", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        IdPublicacao,
                        IdDocumento,
                        ProtocoloDocumento,
                        SinRetornarAndamento,
                        SinRetornarAssinaturas});
            return ((RetornoConsultaPublicacao)(results[0]));
        }
        
        /// <remarks/>
        public void consultarPublicacaoAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string IdPublicacao, string IdDocumento, string ProtocoloDocumento, string SinRetornarAndamento, string SinRetornarAssinaturas) {
            this.consultarPublicacaoAsync(SiglaSistema, IdentificacaoServico, IdUnidade, IdPublicacao, IdDocumento, ProtocoloDocumento, SinRetornarAndamento, SinRetornarAssinaturas, null);
        }
        
        /// <remarks/>
        public void consultarPublicacaoAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string IdPublicacao, string IdDocumento, string ProtocoloDocumento, string SinRetornarAndamento, string SinRetornarAssinaturas, object userState) {
            if ((this.consultarPublicacaoOperationCompleted == null)) {
                this.consultarPublicacaoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnconsultarPublicacaoOperationCompleted);
            }
            this.InvokeAsync("consultarPublicacao", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        IdPublicacao,
                        IdDocumento,
                        ProtocoloDocumento,
                        SinRetornarAndamento,
                        SinRetornarAssinaturas}, this.consultarPublicacaoOperationCompleted, userState);
        }
        
        private void OnconsultarPublicacaoOperationCompleted(object arg) {
            if ((this.consultarPublicacaoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.consultarPublicacaoCompleted(this, new consultarPublicacaoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("SeiAction", RequestNamespace="Sei", ResponseNamespace="Sei")]
        [return: System.Xml.Serialization.SoapElementAttribute("parametros")]
        public string agendarPublicacao(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string IdDocumento, string ProtocoloDocumento, string StaMotivo, string IdVeiculoPublicacao, string DataDisponibilizacao, string Resumo, PublicacaoImprensaNacional ImprensaNacional) {
            object[] results = this.Invoke("agendarPublicacao", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        IdDocumento,
                        ProtocoloDocumento,
                        StaMotivo,
                        IdVeiculoPublicacao,
                        DataDisponibilizacao,
                        Resumo,
                        ImprensaNacional});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void agendarPublicacaoAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string IdDocumento, string ProtocoloDocumento, string StaMotivo, string IdVeiculoPublicacao, string DataDisponibilizacao, string Resumo, PublicacaoImprensaNacional ImprensaNacional) {
            this.agendarPublicacaoAsync(SiglaSistema, IdentificacaoServico, IdUnidade, IdDocumento, ProtocoloDocumento, StaMotivo, IdVeiculoPublicacao, DataDisponibilizacao, Resumo, ImprensaNacional, null);
        }
        
        /// <remarks/>
        public void agendarPublicacaoAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string IdDocumento, string ProtocoloDocumento, string StaMotivo, string IdVeiculoPublicacao, string DataDisponibilizacao, string Resumo, PublicacaoImprensaNacional ImprensaNacional, object userState) {
            if ((this.agendarPublicacaoOperationCompleted == null)) {
                this.agendarPublicacaoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnagendarPublicacaoOperationCompleted);
            }
            this.InvokeAsync("agendarPublicacao", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        IdDocumento,
                        ProtocoloDocumento,
                        StaMotivo,
                        IdVeiculoPublicacao,
                        DataDisponibilizacao,
                        Resumo,
                        ImprensaNacional}, this.agendarPublicacaoOperationCompleted, userState);
        }
        
        private void OnagendarPublicacaoOperationCompleted(object arg) {
            if ((this.agendarPublicacaoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.agendarPublicacaoCompleted(this, new agendarPublicacaoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("SeiAction", RequestNamespace="Sei", ResponseNamespace="Sei")]
        [return: System.Xml.Serialization.SoapElementAttribute("parametros")]
        public string alterarPublicacao(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string IdPublicacao, string IdDocumento, string ProtocoloDocumento, string StaMotivo, string IdVeiculoPublicacao, string DataDisponibilizacao, string Resumo, PublicacaoImprensaNacional ImprensaNacional) {
            object[] results = this.Invoke("alterarPublicacao", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        IdPublicacao,
                        IdDocumento,
                        ProtocoloDocumento,
                        StaMotivo,
                        IdVeiculoPublicacao,
                        DataDisponibilizacao,
                        Resumo,
                        ImprensaNacional});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void alterarPublicacaoAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string IdPublicacao, string IdDocumento, string ProtocoloDocumento, string StaMotivo, string IdVeiculoPublicacao, string DataDisponibilizacao, string Resumo, PublicacaoImprensaNacional ImprensaNacional) {
            this.alterarPublicacaoAsync(SiglaSistema, IdentificacaoServico, IdUnidade, IdPublicacao, IdDocumento, ProtocoloDocumento, StaMotivo, IdVeiculoPublicacao, DataDisponibilizacao, Resumo, ImprensaNacional, null);
        }
        
        /// <remarks/>
        public void alterarPublicacaoAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string IdPublicacao, string IdDocumento, string ProtocoloDocumento, string StaMotivo, string IdVeiculoPublicacao, string DataDisponibilizacao, string Resumo, PublicacaoImprensaNacional ImprensaNacional, object userState) {
            if ((this.alterarPublicacaoOperationCompleted == null)) {
                this.alterarPublicacaoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnalterarPublicacaoOperationCompleted);
            }
            this.InvokeAsync("alterarPublicacao", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        IdPublicacao,
                        IdDocumento,
                        ProtocoloDocumento,
                        StaMotivo,
                        IdVeiculoPublicacao,
                        DataDisponibilizacao,
                        Resumo,
                        ImprensaNacional}, this.alterarPublicacaoOperationCompleted, userState);
        }
        
        private void OnalterarPublicacaoOperationCompleted(object arg) {
            if ((this.alterarPublicacaoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.alterarPublicacaoCompleted(this, new alterarPublicacaoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("SeiAction", RequestNamespace="Sei", ResponseNamespace="Sei")]
        [return: System.Xml.Serialization.SoapElementAttribute("parametros")]
        public string cancelarAgendamentoPublicacao(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string IdPublicacao, string IdDocumento, string ProtocoloDocumento) {
            object[] results = this.Invoke("cancelarAgendamentoPublicacao", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        IdPublicacao,
                        IdDocumento,
                        ProtocoloDocumento});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void cancelarAgendamentoPublicacaoAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string IdPublicacao, string IdDocumento, string ProtocoloDocumento) {
            this.cancelarAgendamentoPublicacaoAsync(SiglaSistema, IdentificacaoServico, IdUnidade, IdPublicacao, IdDocumento, ProtocoloDocumento, null);
        }
        
        /// <remarks/>
        public void cancelarAgendamentoPublicacaoAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string IdPublicacao, string IdDocumento, string ProtocoloDocumento, object userState) {
            if ((this.cancelarAgendamentoPublicacaoOperationCompleted == null)) {
                this.cancelarAgendamentoPublicacaoOperationCompleted = new System.Threading.SendOrPostCallback(this.OncancelarAgendamentoPublicacaoOperationCompleted);
            }
            this.InvokeAsync("cancelarAgendamentoPublicacao", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        IdPublicacao,
                        IdDocumento,
                        ProtocoloDocumento}, this.cancelarAgendamentoPublicacaoOperationCompleted, userState);
        }
        
        private void OncancelarAgendamentoPublicacaoOperationCompleted(object arg) {
            if ((this.cancelarAgendamentoPublicacaoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cancelarAgendamentoPublicacaoCompleted(this, new cancelarAgendamentoPublicacaoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("SeiAction", RequestNamespace="Sei", ResponseNamespace="Sei")]
        [return: System.Xml.Serialization.SoapElementAttribute("parametros")]
        public Feriado[] listarFeriados(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string IdOrgao, string DataInicial, string DataFinal) {
            object[] results = this.Invoke("listarFeriados", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        IdOrgao,
                        DataInicial,
                        DataFinal});
            return ((Feriado[])(results[0]));
        }
        
        /// <remarks/>
        public void listarFeriadosAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string IdOrgao, string DataInicial, string DataFinal) {
            this.listarFeriadosAsync(SiglaSistema, IdentificacaoServico, IdUnidade, IdOrgao, DataInicial, DataFinal, null);
        }
        
        /// <remarks/>
        public void listarFeriadosAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string IdOrgao, string DataInicial, string DataFinal, object userState) {
            if ((this.listarFeriadosOperationCompleted == null)) {
                this.listarFeriadosOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistarFeriadosOperationCompleted);
            }
            this.InvokeAsync("listarFeriados", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        IdOrgao,
                        DataInicial,
                        DataFinal}, this.listarFeriadosOperationCompleted, userState);
        }
        
        private void OnlistarFeriadosOperationCompleted(object arg) {
            if ((this.listarFeriadosCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listarFeriadosCompleted(this, new listarFeriadosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("SeiAction", RequestNamespace="Sei", ResponseNamespace="Sei")]
        [return: System.Xml.Serialization.SoapElementAttribute("parametros")]
        public string confirmarDisponibilizacaoPublicacao(string SiglaSistema, string IdentificacaoServico, string IdVeiculoPublicacao, string DataDisponibilizacao, string DataPublicacao, string Numero, string[] IdDocumentos) {
            object[] results = this.Invoke("confirmarDisponibilizacaoPublicacao", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdVeiculoPublicacao,
                        DataDisponibilizacao,
                        DataPublicacao,
                        Numero,
                        IdDocumentos});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void confirmarDisponibilizacaoPublicacaoAsync(string SiglaSistema, string IdentificacaoServico, string IdVeiculoPublicacao, string DataDisponibilizacao, string DataPublicacao, string Numero, string[] IdDocumentos) {
            this.confirmarDisponibilizacaoPublicacaoAsync(SiglaSistema, IdentificacaoServico, IdVeiculoPublicacao, DataDisponibilizacao, DataPublicacao, Numero, IdDocumentos, null);
        }
        
        /// <remarks/>
        public void confirmarDisponibilizacaoPublicacaoAsync(string SiglaSistema, string IdentificacaoServico, string IdVeiculoPublicacao, string DataDisponibilizacao, string DataPublicacao, string Numero, string[] IdDocumentos, object userState) {
            if ((this.confirmarDisponibilizacaoPublicacaoOperationCompleted == null)) {
                this.confirmarDisponibilizacaoPublicacaoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnconfirmarDisponibilizacaoPublicacaoOperationCompleted);
            }
            this.InvokeAsync("confirmarDisponibilizacaoPublicacao", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdVeiculoPublicacao,
                        DataDisponibilizacao,
                        DataPublicacao,
                        Numero,
                        IdDocumentos}, this.confirmarDisponibilizacaoPublicacaoOperationCompleted, userState);
        }
        
        private void OnconfirmarDisponibilizacaoPublicacaoOperationCompleted(object arg) {
            if ((this.confirmarDisponibilizacaoPublicacaoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.confirmarDisponibilizacaoPublicacaoCompleted(this, new confirmarDisponibilizacaoPublicacaoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("SeiAction", RequestNamespace="Sei", ResponseNamespace="Sei")]
        [return: System.Xml.Serialization.SoapElementAttribute("parametros")]
        public RetornoEnvioEmail enviarEmail(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string ProtocoloProcedimento, string De, string Para, string CCO, string Assunto, string Mensagem, string[] IdDocumentos) {
            object[] results = this.Invoke("enviarEmail", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        ProtocoloProcedimento,
                        De,
                        Para,
                        CCO,
                        Assunto,
                        Mensagem,
                        IdDocumentos});
            return ((RetornoEnvioEmail)(results[0]));
        }
        
        /// <remarks/>
        public void enviarEmailAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string ProtocoloProcedimento, string De, string Para, string CCO, string Assunto, string Mensagem, string[] IdDocumentos) {
            this.enviarEmailAsync(SiglaSistema, IdentificacaoServico, IdUnidade, ProtocoloProcedimento, De, Para, CCO, Assunto, Mensagem, IdDocumentos, null);
        }
        
        /// <remarks/>
        public void enviarEmailAsync(string SiglaSistema, string IdentificacaoServico, string IdUnidade, string ProtocoloProcedimento, string De, string Para, string CCO, string Assunto, string Mensagem, string[] IdDocumentos, object userState) {
            if ((this.enviarEmailOperationCompleted == null)) {
                this.enviarEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnenviarEmailOperationCompleted);
            }
            this.InvokeAsync("enviarEmail", new object[] {
                        SiglaSistema,
                        IdentificacaoServico,
                        IdUnidade,
                        ProtocoloProcedimento,
                        De,
                        Para,
                        CCO,
                        Assunto,
                        Mensagem,
                        IdDocumentos}, this.enviarEmailOperationCompleted, userState);
        }
        
        private void OnenviarEmailOperationCompleted(object arg) {
            if ((this.enviarEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.enviarEmailCompleted(this, new enviarEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="Sei")]
    public partial class Procedimento {
        
        private string idTipoProcedimentoField;
        
        private string numeroProtocoloField;
        
        private string dataAutuacaoField;
        
        private string especificacaoField;
        
        private Assunto[] assuntosField;
        
        private Interessado[] interessadosField;
        
        private string observacaoField;
        
        private string nivelAcessoField;
        
        private string idHipoteseLegalField;
        
        /// <remarks/>
        public string IdTipoProcedimento {
            get {
                return this.idTipoProcedimentoField;
            }
            set {
                this.idTipoProcedimentoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string NumeroProtocolo {
            get {
                return this.numeroProtocoloField;
            }
            set {
                this.numeroProtocoloField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string DataAutuacao {
            get {
                return this.dataAutuacaoField;
            }
            set {
                this.dataAutuacaoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string Especificacao {
            get {
                return this.especificacaoField;
            }
            set {
                this.especificacaoField = value;
            }
        }
        
        /// <remarks/>
        public Assunto[] Assuntos {
            get {
                return this.assuntosField;
            }
            set {
                this.assuntosField = value;
            }
        }
        
        /// <remarks/>
        public Interessado[] Interessados {
            get {
                return this.interessadosField;
            }
            set {
                this.interessadosField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string Observacao {
            get {
                return this.observacaoField;
            }
            set {
                this.observacaoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string NivelAcesso {
            get {
                return this.nivelAcessoField;
            }
            set {
                this.nivelAcessoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string IdHipoteseLegal {
            get {
                return this.idHipoteseLegalField;
            }
            set {
                this.idHipoteseLegalField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="Sei")]
    public partial class Assunto {
        
        private string codigoEstruturadoField;
        
        private string descricaoField;
        
        /// <remarks/>
        public string CodigoEstruturado {
            get {
                return this.codigoEstruturadoField;
            }
            set {
                this.codigoEstruturadoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string Descricao {
            get {
                return this.descricaoField;
            }
            set {
                this.descricaoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="Sei")]
    public partial class RetornoEnvioEmail {
        
        private string idDocumentoField;
        
        private string documentoFormatadoField;
        
        private string linkAcessoField;
        
        /// <remarks/>
        public string IdDocumento {
            get {
                return this.idDocumentoField;
            }
            set {
                this.idDocumentoField = value;
            }
        }
        
        /// <remarks/>
        public string DocumentoFormatado {
            get {
                return this.documentoFormatadoField;
            }
            set {
                this.documentoFormatadoField = value;
            }
        }
        
        /// <remarks/>
        public string LinkAcesso {
            get {
                return this.linkAcessoField;
            }
            set {
                this.linkAcessoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="Sei")]
    public partial class Feriado {
        
        private string dataField;
        
        private string descricaoField;
        
        /// <remarks/>
        public string Data {
            get {
                return this.dataField;
            }
            set {
                this.dataField = value;
            }
        }
        
        /// <remarks/>
        public string Descricao {
            get {
                return this.descricaoField;
            }
            set {
                this.descricaoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="Sei")]
    public partial class RetornoConsultaPublicacao {
        
        private Publicacao publicacaoField;
        
        private Andamento andamentoField;
        
        private Assinatura[] assinaturasField;
        
        /// <remarks/>
        public Publicacao Publicacao {
            get {
                return this.publicacaoField;
            }
            set {
                this.publicacaoField = value;
            }
        }
        
        /// <remarks/>
        public Andamento Andamento {
            get {
                return this.andamentoField;
            }
            set {
                this.andamentoField = value;
            }
        }
        
        /// <remarks/>
        public Assinatura[] Assinaturas {
            get {
                return this.assinaturasField;
            }
            set {
                this.assinaturasField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="Sei")]
    public partial class Publicacao {
        
        private string idPublicacaoField;
        
        private string idDocumentoField;
        
        private string staMotivoField;
        
        private string resumoField;
        
        private string idVeiculoPublicacaoField;
        
        private string nomeVeiculoField;
        
        private string staTipoVeiculoField;
        
        private string numeroField;
        
        private string dataDisponibilizacaoField;
        
        private string dataPublicacaoField;
        
        private string estadoField;
        
        private PublicacaoImprensaNacional imprensaNacionalField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string IdPublicacao {
            get {
                return this.idPublicacaoField;
            }
            set {
                this.idPublicacaoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string IdDocumento {
            get {
                return this.idDocumentoField;
            }
            set {
                this.idDocumentoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string StaMotivo {
            get {
                return this.staMotivoField;
            }
            set {
                this.staMotivoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string Resumo {
            get {
                return this.resumoField;
            }
            set {
                this.resumoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string IdVeiculoPublicacao {
            get {
                return this.idVeiculoPublicacaoField;
            }
            set {
                this.idVeiculoPublicacaoField = value;
            }
        }
        
        /// <remarks/>
        public string NomeVeiculo {
            get {
                return this.nomeVeiculoField;
            }
            set {
                this.nomeVeiculoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string StaTipoVeiculo {
            get {
                return this.staTipoVeiculoField;
            }
            set {
                this.staTipoVeiculoField = value;
            }
        }
        
        /// <remarks/>
        public string Numero {
            get {
                return this.numeroField;
            }
            set {
                this.numeroField = value;
            }
        }
        
        /// <remarks/>
        public string DataDisponibilizacao {
            get {
                return this.dataDisponibilizacaoField;
            }
            set {
                this.dataDisponibilizacaoField = value;
            }
        }
        
        /// <remarks/>
        public string DataPublicacao {
            get {
                return this.dataPublicacaoField;
            }
            set {
                this.dataPublicacaoField = value;
            }
        }
        
        /// <remarks/>
        public string Estado {
            get {
                return this.estadoField;
            }
            set {
                this.estadoField = value;
            }
        }
        
        /// <remarks/>
        public PublicacaoImprensaNacional ImprensaNacional {
            get {
                return this.imprensaNacionalField;
            }
            set {
                this.imprensaNacionalField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="Sei")]
    public partial class PublicacaoImprensaNacional {
        
        private string idVeiculoField;
        
        private string siglaVeiculoField;
        
        private string descricaoVeiculoField;
        
        private string paginaField;
        
        private string idSecaoField;
        
        private string secaoField;
        
        private string dataField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string IdVeiculo {
            get {
                return this.idVeiculoField;
            }
            set {
                this.idVeiculoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string SiglaVeiculo {
            get {
                return this.siglaVeiculoField;
            }
            set {
                this.siglaVeiculoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string DescricaoVeiculo {
            get {
                return this.descricaoVeiculoField;
            }
            set {
                this.descricaoVeiculoField = value;
            }
        }
        
        /// <remarks/>
        public string Pagina {
            get {
                return this.paginaField;
            }
            set {
                this.paginaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string IdSecao {
            get {
                return this.idSecaoField;
            }
            set {
                this.idSecaoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string Secao {
            get {
                return this.secaoField;
            }
            set {
                this.secaoField = value;
            }
        }
        
        /// <remarks/>
        public string Data {
            get {
                return this.dataField;
            }
            set {
                this.dataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="Sei")]
    public partial class Andamento {
        
        private string idAndamentoField;
        
        private string idTarefaField;
        
        private string idTarefaModuloField;
        
        private string descricaoField;
        
        private string dataHoraField;
        
        private Unidade unidadeField;
        
        private Usuario usuarioField;
        
        private AtributoAndamento[] atributosField;
        
        /// <remarks/>
        public string IdAndamento {
            get {
                return this.idAndamentoField;
            }
            set {
                this.idAndamentoField = value;
            }
        }
        
        /// <remarks/>
        public string IdTarefa {
            get {
                return this.idTarefaField;
            }
            set {
                this.idTarefaField = value;
            }
        }
        
        /// <remarks/>
        public string IdTarefaModulo {
            get {
                return this.idTarefaModuloField;
            }
            set {
                this.idTarefaModuloField = value;
            }
        }
        
        /// <remarks/>
        public string Descricao {
            get {
                return this.descricaoField;
            }
            set {
                this.descricaoField = value;
            }
        }
        
        /// <remarks/>
        public string DataHora {
            get {
                return this.dataHoraField;
            }
            set {
                this.dataHoraField = value;
            }
        }
        
        /// <remarks/>
        public Unidade Unidade {
            get {
                return this.unidadeField;
            }
            set {
                this.unidadeField = value;
            }
        }
        
        /// <remarks/>
        public Usuario Usuario {
            get {
                return this.usuarioField;
            }
            set {
                this.usuarioField = value;
            }
        }
        
        /// <remarks/>
        public AtributoAndamento[] Atributos {
            get {
                return this.atributosField;
            }
            set {
                this.atributosField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="Sei")]
    public partial class Unidade {
        
        private string idUnidadeField;
        
        private string siglaField;
        
        private string descricaoField;
        
        private string sinProtocoloField;
        
        private string sinArquivamentoField;
        
        private string sinOuvidoriaField;
        
        /// <remarks/>
        public string IdUnidade {
            get {
                return this.idUnidadeField;
            }
            set {
                this.idUnidadeField = value;
            }
        }
        
        /// <remarks/>
        public string Sigla {
            get {
                return this.siglaField;
            }
            set {
                this.siglaField = value;
            }
        }
        
        /// <remarks/>
        public string Descricao {
            get {
                return this.descricaoField;
            }
            set {
                this.descricaoField = value;
            }
        }
        
        /// <remarks/>
        public string SinProtocolo {
            get {
                return this.sinProtocoloField;
            }
            set {
                this.sinProtocoloField = value;
            }
        }
        
        /// <remarks/>
        public string SinArquivamento {
            get {
                return this.sinArquivamentoField;
            }
            set {
                this.sinArquivamentoField = value;
            }
        }
        
        /// <remarks/>
        public string SinOuvidoria {
            get {
                return this.sinOuvidoriaField;
            }
            set {
                this.sinOuvidoriaField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="Sei")]
    public partial class Usuario {
        
        private string idUsuarioField;
        
        private string siglaField;
        
        private string nomeField;
        
        /// <remarks/>
        public string IdUsuario {
            get {
                return this.idUsuarioField;
            }
            set {
                this.idUsuarioField = value;
            }
        }
        
        /// <remarks/>
        public string Sigla {
            get {
                return this.siglaField;
            }
            set {
                this.siglaField = value;
            }
        }
        
        /// <remarks/>
        public string Nome {
            get {
                return this.nomeField;
            }
            set {
                this.nomeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="Sei")]
    public partial class AtributoAndamento {
        
        private string nomeField;
        
        private string valorField;
        
        private string idOrigemField;
        
        /// <remarks/>
        public string Nome {
            get {
                return this.nomeField;
            }
            set {
                this.nomeField = value;
            }
        }
        
        /// <remarks/>
        public string Valor {
            get {
                return this.valorField;
            }
            set {
                this.valorField = value;
            }
        }
        
        /// <remarks/>
        public string IdOrigem {
            get {
                return this.idOrigemField;
            }
            set {
                this.idOrigemField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="Sei")]
    public partial class Assinatura {
        
        private string nomeField;
        
        private string cargoFuncaoField;
        
        private string dataHoraField;
        
        private string idUsuarioField;
        
        private string idOrigemField;
        
        private string idOrgaoField;
        
        private string siglaField;
        
        /// <remarks/>
        public string Nome {
            get {
                return this.nomeField;
            }
            set {
                this.nomeField = value;
            }
        }
        
        /// <remarks/>
        public string CargoFuncao {
            get {
                return this.cargoFuncaoField;
            }
            set {
                this.cargoFuncaoField = value;
            }
        }
        
        /// <remarks/>
        public string DataHora {
            get {
                return this.dataHoraField;
            }
            set {
                this.dataHoraField = value;
            }
        }
        
        /// <remarks/>
        public string IdUsuario {
            get {
                return this.idUsuarioField;
            }
            set {
                this.idUsuarioField = value;
            }
        }
        
        /// <remarks/>
        public string IdOrigem {
            get {
                return this.idOrigemField;
            }
            set {
                this.idOrigemField = value;
            }
        }
        
        /// <remarks/>
        public string IdOrgao {
            get {
                return this.idOrgaoField;
            }
            set {
                this.idOrgaoField = value;
            }
        }
        
        /// <remarks/>
        public string Sigla {
            get {
                return this.siglaField;
            }
            set {
                this.siglaField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="Sei")]
    public partial class AndamentoMarcador {
        
        private string idAndamentoMarcadorField;
        
        private string textoField;
        
        private string dataHoraField;
        
        private Usuario usuarioField;
        
        private Marcador marcadorField;
        
        /// <remarks/>
        public string IdAndamentoMarcador {
            get {
                return this.idAndamentoMarcadorField;
            }
            set {
                this.idAndamentoMarcadorField = value;
            }
        }
        
        /// <remarks/>
        public string Texto {
            get {
                return this.textoField;
            }
            set {
                this.textoField = value;
            }
        }
        
        /// <remarks/>
        public string DataHora {
            get {
                return this.dataHoraField;
            }
            set {
                this.dataHoraField = value;
            }
        }
        
        /// <remarks/>
        public Usuario Usuario {
            get {
                return this.usuarioField;
            }
            set {
                this.usuarioField = value;
            }
        }
        
        /// <remarks/>
        public Marcador Marcador {
            get {
                return this.marcadorField;
            }
            set {
                this.marcadorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="Sei")]
    public partial class Marcador {
        
        private string idMarcadorField;
        
        private string nomeField;
        
        private string iconeField;
        
        private string sinAtivoField;
        
        /// <remarks/>
        public string IdMarcador {
            get {
                return this.idMarcadorField;
            }
            set {
                this.idMarcadorField = value;
            }
        }
        
        /// <remarks/>
        public string Nome {
            get {
                return this.nomeField;
            }
            set {
                this.nomeField = value;
            }
        }
        
        /// <remarks/>
        public string Icone {
            get {
                return this.iconeField;
            }
            set {
                this.iconeField = value;
            }
        }
        
        /// <remarks/>
        public string SinAtivo {
            get {
                return this.sinAtivoField;
            }
            set {
                this.sinAtivoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="Sei")]
    public partial class DefinicaoMarcador {
        
        private string protocoloProcedimentoField;
        
        private string idMarcadorField;
        
        private string textoField;
        
        /// <remarks/>
        public string ProtocoloProcedimento {
            get {
                return this.protocoloProcedimentoField;
            }
            set {
                this.protocoloProcedimentoField = value;
            }
        }
        
        /// <remarks/>
        public string IdMarcador {
            get {
                return this.idMarcadorField;
            }
            set {
                this.idMarcadorField = value;
            }
        }
        
        /// <remarks/>
        public string Texto {
            get {
                return this.textoField;
            }
            set {
                this.textoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="Sei")]
    public partial class Cargo {
        
        private string idCargoField;
        
        private string expressaoCargoField;
        
        private string expressaoTratamentoField;
        
        private string expressaoVocativoField;
        
        /// <remarks/>
        public string IdCargo {
            get {
                return this.idCargoField;
            }
            set {
                this.idCargoField = value;
            }
        }
        
        /// <remarks/>
        public string ExpressaoCargo {
            get {
                return this.expressaoCargoField;
            }
            set {
                this.expressaoCargoField = value;
            }
        }
        
        /// <remarks/>
        public string ExpressaoTratamento {
            get {
                return this.expressaoTratamentoField;
            }
            set {
                this.expressaoTratamentoField = value;
            }
        }
        
        /// <remarks/>
        public string ExpressaoVocativo {
            get {
                return this.expressaoVocativoField;
            }
            set {
                this.expressaoVocativoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="Sei")]
    public partial class Cidade {
        
        private string idCidadeField;
        
        private string idEstadoField;
        
        private string idPaisField;
        
        private string nomeField;
        
        private string codigoIbgeField;
        
        private string sinCapitalField;
        
        private string latitudeField;
        
        private string longitudeField;
        
        /// <remarks/>
        public string IdCidade {
            get {
                return this.idCidadeField;
            }
            set {
                this.idCidadeField = value;
            }
        }
        
        /// <remarks/>
        public string IdEstado {
            get {
                return this.idEstadoField;
            }
            set {
                this.idEstadoField = value;
            }
        }
        
        /// <remarks/>
        public string IdPais {
            get {
                return this.idPaisField;
            }
            set {
                this.idPaisField = value;
            }
        }
        
        /// <remarks/>
        public string Nome {
            get {
                return this.nomeField;
            }
            set {
                this.nomeField = value;
            }
        }
        
        /// <remarks/>
        public string CodigoIbge {
            get {
                return this.codigoIbgeField;
            }
            set {
                this.codigoIbgeField = value;
            }
        }
        
        /// <remarks/>
        public string SinCapital {
            get {
                return this.sinCapitalField;
            }
            set {
                this.sinCapitalField = value;
            }
        }
        
        /// <remarks/>
        public string Latitude {
            get {
                return this.latitudeField;
            }
            set {
                this.latitudeField = value;
            }
        }
        
        /// <remarks/>
        public string Longitude {
            get {
                return this.longitudeField;
            }
            set {
                this.longitudeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="Sei")]
    public partial class Estado {
        
        private string idEstadoField;
        
        private string idPaisField;
        
        private string siglaField;
        
        private string nomeField;
        
        private string codigoIbgeField;
        
        /// <remarks/>
        public string IdEstado {
            get {
                return this.idEstadoField;
            }
            set {
                this.idEstadoField = value;
            }
        }
        
        /// <remarks/>
        public string IdPais {
            get {
                return this.idPaisField;
            }
            set {
                this.idPaisField = value;
            }
        }
        
        /// <remarks/>
        public string Sigla {
            get {
                return this.siglaField;
            }
            set {
                this.siglaField = value;
            }
        }
        
        /// <remarks/>
        public string Nome {
            get {
                return this.nomeField;
            }
            set {
                this.nomeField = value;
            }
        }
        
        /// <remarks/>
        public string CodigoIbge {
            get {
                return this.codigoIbgeField;
            }
            set {
                this.codigoIbgeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="Sei")]
    public partial class Pais {
        
        private string idPaisField;
        
        private string nomeField;
        
        /// <remarks/>
        public string IdPais {
            get {
                return this.idPaisField;
            }
            set {
                this.idPaisField = value;
            }
        }
        
        /// <remarks/>
        public string Nome {
            get {
                return this.nomeField;
            }
            set {
                this.nomeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="Sei")]
    public partial class TipoConferencia {
        
        private string idTipoConferenciaField;
        
        private string descricaoField;
        
        /// <remarks/>
        public string IdTipoConferencia {
            get {
                return this.idTipoConferenciaField;
            }
            set {
                this.idTipoConferenciaField = value;
            }
        }
        
        /// <remarks/>
        public string Descricao {
            get {
                return this.descricaoField;
            }
            set {
                this.descricaoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="Sei")]
    public partial class HipoteseLegal {
        
        private string idHipoteseLegalField;
        
        private string nomeField;
        
        private string baseLegalField;
        
        private string nivelAcessoField;
        
        /// <remarks/>
        public string IdHipoteseLegal {
            get {
                return this.idHipoteseLegalField;
            }
            set {
                this.idHipoteseLegalField = value;
            }
        }
        
        /// <remarks/>
        public string Nome {
            get {
                return this.nomeField;
            }
            set {
                this.nomeField = value;
            }
        }
        
        /// <remarks/>
        public string BaseLegal {
            get {
                return this.baseLegalField;
            }
            set {
                this.baseLegalField = value;
            }
        }
        
        /// <remarks/>
        public string NivelAcesso {
            get {
                return this.nivelAcessoField;
            }
            set {
                this.nivelAcessoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="Sei")]
    public partial class ArquivoExtensao {
        
        private string idArquivoExtensaoField;
        
        private string extensaoField;
        
        private string descricaoField;
        
        /// <remarks/>
        public string IdArquivoExtensao {
            get {
                return this.idArquivoExtensaoField;
            }
            set {
                this.idArquivoExtensaoField = value;
            }
        }
        
        /// <remarks/>
        public string Extensao {
            get {
                return this.extensaoField;
            }
            set {
                this.extensaoField = value;
            }
        }
        
        /// <remarks/>
        public string Descricao {
            get {
                return this.descricaoField;
            }
            set {
                this.descricaoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="Sei")]
    public partial class ProtocoloBloco {
        
        private string protocoloFormatadoField;
        
        private string identificacaoField;
        
        private Assinatura[] assinaturasField;
        
        /// <remarks/>
        public string ProtocoloFormatado {
            get {
                return this.protocoloFormatadoField;
            }
            set {
                this.protocoloFormatadoField = value;
            }
        }
        
        /// <remarks/>
        public string Identificacao {
            get {
                return this.identificacaoField;
            }
            set {
                this.identificacaoField = value;
            }
        }
        
        /// <remarks/>
        public Assinatura[] Assinaturas {
            get {
                return this.assinaturasField;
            }
            set {
                this.assinaturasField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="Sei")]
    public partial class RetornoConsultaBloco {
        
        private string idBlocoField;
        
        private Unidade unidadeField;
        
        private Usuario usuarioField;
        
        private string descricaoField;
        
        private string tipoField;
        
        private string estadoField;
        
        private Unidade[] unidadesDisponibilizacaoField;
        
        private ProtocoloBloco[] protocolosField;
        
        /// <remarks/>
        public string IdBloco {
            get {
                return this.idBlocoField;
            }
            set {
                this.idBlocoField = value;
            }
        }
        
        /// <remarks/>
        public Unidade Unidade {
            get {
                return this.unidadeField;
            }
            set {
                this.unidadeField = value;
            }
        }
        
        /// <remarks/>
        public Usuario Usuario {
            get {
                return this.usuarioField;
            }
            set {
                this.usuarioField = value;
            }
        }
        
        /// <remarks/>
        public string Descricao {
            get {
                return this.descricaoField;
            }
            set {
                this.descricaoField = value;
            }
        }
        
        /// <remarks/>
        public string Tipo {
            get {
                return this.tipoField;
            }
            set {
                this.tipoField = value;
            }
        }
        
        /// <remarks/>
        public string Estado {
            get {
                return this.estadoField;
            }
            set {
                this.estadoField = value;
            }
        }
        
        /// <remarks/>
        public Unidade[] UnidadesDisponibilizacao {
            get {
                return this.unidadesDisponibilizacaoField;
            }
            set {
                this.unidadesDisponibilizacaoField = value;
            }
        }
        
        /// <remarks/>
        public ProtocoloBloco[] Protocolos {
            get {
                return this.protocolosField;
            }
            set {
                this.protocolosField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="Sei")]
    public partial class RetornoConsultaDocumento {
        
        private string idProcedimentoField;
        
        private string procedimentoFormatadoField;
        
        private string idDocumentoField;
        
        private string documentoFormatadoField;
        
        private string linkAcessoField;
        
        private string nivelAcessoLocalField;
        
        private string nivelAcessoGlobalField;
        
        private Serie serieField;
        
        private string numeroField;
        
        private string descricaoField;
        
        private string dataField;
        
        private Unidade unidadeElaboradoraField;
        
        private Andamento andamentoGeracaoField;
        
        private Assinatura[] assinaturasField;
        
        private Publicacao publicacaoField;
        
        private Campo[] camposField;
        
        /// <remarks/>
        public string IdProcedimento {
            get {
                return this.idProcedimentoField;
            }
            set {
                this.idProcedimentoField = value;
            }
        }
        
        /// <remarks/>
        public string ProcedimentoFormatado {
            get {
                return this.procedimentoFormatadoField;
            }
            set {
                this.procedimentoFormatadoField = value;
            }
        }
        
        /// <remarks/>
        public string IdDocumento {
            get {
                return this.idDocumentoField;
            }
            set {
                this.idDocumentoField = value;
            }
        }
        
        /// <remarks/>
        public string DocumentoFormatado {
            get {
                return this.documentoFormatadoField;
            }
            set {
                this.documentoFormatadoField = value;
            }
        }
        
        /// <remarks/>
        public string LinkAcesso {
            get {
                return this.linkAcessoField;
            }
            set {
                this.linkAcessoField = value;
            }
        }
        
        /// <remarks/>
        public string NivelAcessoLocal {
            get {
                return this.nivelAcessoLocalField;
            }
            set {
                this.nivelAcessoLocalField = value;
            }
        }
        
        /// <remarks/>
        public string NivelAcessoGlobal {
            get {
                return this.nivelAcessoGlobalField;
            }
            set {
                this.nivelAcessoGlobalField = value;
            }
        }
        
        /// <remarks/>
        public Serie Serie {
            get {
                return this.serieField;
            }
            set {
                this.serieField = value;
            }
        }
        
        /// <remarks/>
        public string Numero {
            get {
                return this.numeroField;
            }
            set {
                this.numeroField = value;
            }
        }
        
        /// <remarks/>
        public string Descricao {
            get {
                return this.descricaoField;
            }
            set {
                this.descricaoField = value;
            }
        }
        
        /// <remarks/>
        public string Data {
            get {
                return this.dataField;
            }
            set {
                this.dataField = value;
            }
        }
        
        /// <remarks/>
        public Unidade UnidadeElaboradora {
            get {
                return this.unidadeElaboradoraField;
            }
            set {
                this.unidadeElaboradoraField = value;
            }
        }
        
        /// <remarks/>
        public Andamento AndamentoGeracao {
            get {
                return this.andamentoGeracaoField;
            }
            set {
                this.andamentoGeracaoField = value;
            }
        }
        
        /// <remarks/>
        public Assinatura[] Assinaturas {
            get {
                return this.assinaturasField;
            }
            set {
                this.assinaturasField = value;
            }
        }
        
        /// <remarks/>
        public Publicacao Publicacao {
            get {
                return this.publicacaoField;
            }
            set {
                this.publicacaoField = value;
            }
        }
        
        /// <remarks/>
        public Campo[] Campos {
            get {
                return this.camposField;
            }
            set {
                this.camposField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="Sei")]
    public partial class Serie {
        
        private string idSerieField;
        
        private string nomeField;
        
        private string aplicabilidadeField;
        
        /// <remarks/>
        public string IdSerie {
            get {
                return this.idSerieField;
            }
            set {
                this.idSerieField = value;
            }
        }
        
        /// <remarks/>
        public string Nome {
            get {
                return this.nomeField;
            }
            set {
                this.nomeField = value;
            }
        }
        
        /// <remarks/>
        public string Aplicabilidade {
            get {
                return this.aplicabilidadeField;
            }
            set {
                this.aplicabilidadeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="Sei")]
    public partial class Campo {
        
        private string nomeField;
        
        private string valorField;
        
        /// <remarks/>
        public string Nome {
            get {
                return this.nomeField;
            }
            set {
                this.nomeField = value;
            }
        }
        
        /// <remarks/>
        public string Valor {
            get {
                return this.valorField;
            }
            set {
                this.valorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="Sei")]
    public partial class ProcedimentoResumido {
        
        private string idProcedimentoField;
        
        private string procedimentoFormatadoField;
        
        private TipoProcedimento tipoProcedimentoField;
        
        /// <remarks/>
        public string IdProcedimento {
            get {
                return this.idProcedimentoField;
            }
            set {
                this.idProcedimentoField = value;
            }
        }
        
        /// <remarks/>
        public string ProcedimentoFormatado {
            get {
                return this.procedimentoFormatadoField;
            }
            set {
                this.procedimentoFormatadoField = value;
            }
        }
        
        /// <remarks/>
        public TipoProcedimento TipoProcedimento {
            get {
                return this.tipoProcedimentoField;
            }
            set {
                this.tipoProcedimentoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="Sei")]
    public partial class TipoProcedimento {
        
        private string idTipoProcedimentoField;
        
        private string nomeField;
        
        /// <remarks/>
        public string IdTipoProcedimento {
            get {
                return this.idTipoProcedimentoField;
            }
            set {
                this.idTipoProcedimentoField = value;
            }
        }
        
        /// <remarks/>
        public string Nome {
            get {
                return this.nomeField;
            }
            set {
                this.nomeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="Sei")]
    public partial class Observacao {
        
        private string descricaoField;
        
        private Unidade unidadeField;
        
        /// <remarks/>
        public string Descricao {
            get {
                return this.descricaoField;
            }
            set {
                this.descricaoField = value;
            }
        }
        
        /// <remarks/>
        public Unidade Unidade {
            get {
                return this.unidadeField;
            }
            set {
                this.unidadeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="Sei")]
    public partial class UnidadeProcedimentoAberto {
        
        private Unidade unidadeField;
        
        private Usuario usuarioAtribuicaoField;
        
        /// <remarks/>
        public Unidade Unidade {
            get {
                return this.unidadeField;
            }
            set {
                this.unidadeField = value;
            }
        }
        
        /// <remarks/>
        public Usuario UsuarioAtribuicao {
            get {
                return this.usuarioAtribuicaoField;
            }
            set {
                this.usuarioAtribuicaoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="Sei")]
    public partial class RetornoConsultaProcedimento {
        
        private string idProcedimentoField;
        
        private string procedimentoFormatadoField;
        
        private string especificacaoField;
        
        private string dataAutuacaoField;
        
        private string linkAcessoField;
        
        private string nivelAcessoLocalField;
        
        private string nivelAcessoGlobalField;
        
        private TipoProcedimento tipoProcedimentoField;
        
        private Andamento andamentoGeracaoField;
        
        private Andamento andamentoConclusaoField;
        
        private Andamento ultimoAndamentoField;
        
        private UnidadeProcedimentoAberto[] unidadesProcedimentoAbertoField;
        
        private Assunto[] assuntosField;
        
        private Interessado[] interessadosField;
        
        private Observacao[] observacoesField;
        
        private ProcedimentoResumido[] procedimentosRelacionadosField;
        
        private ProcedimentoResumido[] procedimentosAnexadosField;
        
        /// <remarks/>
        public string IdProcedimento {
            get {
                return this.idProcedimentoField;
            }
            set {
                this.idProcedimentoField = value;
            }
        }
        
        /// <remarks/>
        public string ProcedimentoFormatado {
            get {
                return this.procedimentoFormatadoField;
            }
            set {
                this.procedimentoFormatadoField = value;
            }
        }
        
        /// <remarks/>
        public string Especificacao {
            get {
                return this.especificacaoField;
            }
            set {
                this.especificacaoField = value;
            }
        }
        
        /// <remarks/>
        public string DataAutuacao {
            get {
                return this.dataAutuacaoField;
            }
            set {
                this.dataAutuacaoField = value;
            }
        }
        
        /// <remarks/>
        public string LinkAcesso {
            get {
                return this.linkAcessoField;
            }
            set {
                this.linkAcessoField = value;
            }
        }
        
        /// <remarks/>
        public string NivelAcessoLocal {
            get {
                return this.nivelAcessoLocalField;
            }
            set {
                this.nivelAcessoLocalField = value;
            }
        }
        
        /// <remarks/>
        public string NivelAcessoGlobal {
            get {
                return this.nivelAcessoGlobalField;
            }
            set {
                this.nivelAcessoGlobalField = value;
            }
        }
        
        /// <remarks/>
        public TipoProcedimento TipoProcedimento {
            get {
                return this.tipoProcedimentoField;
            }
            set {
                this.tipoProcedimentoField = value;
            }
        }
        
        /// <remarks/>
        public Andamento AndamentoGeracao {
            get {
                return this.andamentoGeracaoField;
            }
            set {
                this.andamentoGeracaoField = value;
            }
        }
        
        /// <remarks/>
        public Andamento AndamentoConclusao {
            get {
                return this.andamentoConclusaoField;
            }
            set {
                this.andamentoConclusaoField = value;
            }
        }
        
        /// <remarks/>
        public Andamento UltimoAndamento {
            get {
                return this.ultimoAndamentoField;
            }
            set {
                this.ultimoAndamentoField = value;
            }
        }
        
        /// <remarks/>
        public UnidadeProcedimentoAberto[] UnidadesProcedimentoAberto {
            get {
                return this.unidadesProcedimentoAbertoField;
            }
            set {
                this.unidadesProcedimentoAbertoField = value;
            }
        }
        
        /// <remarks/>
        public Assunto[] Assuntos {
            get {
                return this.assuntosField;
            }
            set {
                this.assuntosField = value;
            }
        }
        
        /// <remarks/>
        public Interessado[] Interessados {
            get {
                return this.interessadosField;
            }
            set {
                this.interessadosField = value;
            }
        }
        
        /// <remarks/>
        public Observacao[] Observacoes {
            get {
                return this.observacoesField;
            }
            set {
                this.observacoesField = value;
            }
        }
        
        /// <remarks/>
        public ProcedimentoResumido[] ProcedimentosRelacionados {
            get {
                return this.procedimentosRelacionadosField;
            }
            set {
                this.procedimentosRelacionadosField = value;
            }
        }
        
        /// <remarks/>
        public ProcedimentoResumido[] ProcedimentosAnexados {
            get {
                return this.procedimentosAnexadosField;
            }
            set {
                this.procedimentosAnexadosField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="Sei")]
    public partial class Interessado {
        
        private string siglaField;
        
        private string nomeField;
        
        /// <remarks/>
        public string Sigla {
            get {
                return this.siglaField;
            }
            set {
                this.siglaField = value;
            }
        }
        
        /// <remarks/>
        public string Nome {
            get {
                return this.nomeField;
            }
            set {
                this.nomeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="Sei")]
    public partial class Contato {
        
        private string staOperacaoField;
        
        private string idContatoField;
        
        private string idTipoContatoField;
        
        private string nomeTipoContatoField;
        
        private string siglaField;
        
        private string nomeField;
        
        private string staNaturezaField;
        
        private string idContatoAssociadoField;
        
        private string nomeContatoAssociadoField;
        
        private string sinEnderecoAssociadoField;
        
        private string cnpjAssociadoField;
        
        private string enderecoField;
        
        private string complementoField;
        
        private string bairroField;
        
        private string idCidadeField;
        
        private string nomeCidadeField;
        
        private string idEstadoField;
        
        private string siglaEstadoField;
        
        private string idPaisField;
        
        private string nomePaisField;
        
        private string cepField;
        
        private string staGeneroField;
        
        private string idCargoField;
        
        private string expressaoCargoField;
        
        private string expressaoTratamentoField;
        
        private string expressaoVocativoField;
        
        private string cpfField;
        
        private string cnpjField;
        
        private string rgField;
        
        private string orgaoExpedidorField;
        
        private string numeroPassaporteField;
        
        private string idPaisPassaporteField;
        
        private string nomePaisPassaporteField;
        
        private string matriculaField;
        
        private string matriculaOabField;
        
        private string telefoneFixoField;
        
        private string telefoneCelularField;
        
        private string dataNascimentoField;
        
        private string emailField;
        
        private string sitioInternetField;
        
        private string observacaoField;
        
        private string sinAtivoField;
        
        /// <remarks/>
        public string StaOperacao {
            get {
                return this.staOperacaoField;
            }
            set {
                this.staOperacaoField = value;
            }
        }
        
        /// <remarks/>
        public string IdContato {
            get {
                return this.idContatoField;
            }
            set {
                this.idContatoField = value;
            }
        }
        
        /// <remarks/>
        public string IdTipoContato {
            get {
                return this.idTipoContatoField;
            }
            set {
                this.idTipoContatoField = value;
            }
        }
        
        /// <remarks/>
        public string NomeTipoContato {
            get {
                return this.nomeTipoContatoField;
            }
            set {
                this.nomeTipoContatoField = value;
            }
        }
        
        /// <remarks/>
        public string Sigla {
            get {
                return this.siglaField;
            }
            set {
                this.siglaField = value;
            }
        }
        
        /// <remarks/>
        public string Nome {
            get {
                return this.nomeField;
            }
            set {
                this.nomeField = value;
            }
        }
        
        /// <remarks/>
        public string StaNatureza {
            get {
                return this.staNaturezaField;
            }
            set {
                this.staNaturezaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string IdContatoAssociado {
            get {
                return this.idContatoAssociadoField;
            }
            set {
                this.idContatoAssociadoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string NomeContatoAssociado {
            get {
                return this.nomeContatoAssociadoField;
            }
            set {
                this.nomeContatoAssociadoField = value;
            }
        }
        
        /// <remarks/>
        public string SinEnderecoAssociado {
            get {
                return this.sinEnderecoAssociadoField;
            }
            set {
                this.sinEnderecoAssociadoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string CnpjAssociado {
            get {
                return this.cnpjAssociadoField;
            }
            set {
                this.cnpjAssociadoField = value;
            }
        }
        
        /// <remarks/>
        public string Endereco {
            get {
                return this.enderecoField;
            }
            set {
                this.enderecoField = value;
            }
        }
        
        /// <remarks/>
        public string Complemento {
            get {
                return this.complementoField;
            }
            set {
                this.complementoField = value;
            }
        }
        
        /// <remarks/>
        public string Bairro {
            get {
                return this.bairroField;
            }
            set {
                this.bairroField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string IdCidade {
            get {
                return this.idCidadeField;
            }
            set {
                this.idCidadeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string NomeCidade {
            get {
                return this.nomeCidadeField;
            }
            set {
                this.nomeCidadeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string IdEstado {
            get {
                return this.idEstadoField;
            }
            set {
                this.idEstadoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string SiglaEstado {
            get {
                return this.siglaEstadoField;
            }
            set {
                this.siglaEstadoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string IdPais {
            get {
                return this.idPaisField;
            }
            set {
                this.idPaisField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string NomePais {
            get {
                return this.nomePaisField;
            }
            set {
                this.nomePaisField = value;
            }
        }
        
        /// <remarks/>
        public string Cep {
            get {
                return this.cepField;
            }
            set {
                this.cepField = value;
            }
        }
        
        /// <remarks/>
        public string StaGenero {
            get {
                return this.staGeneroField;
            }
            set {
                this.staGeneroField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string IdCargo {
            get {
                return this.idCargoField;
            }
            set {
                this.idCargoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string ExpressaoCargo {
            get {
                return this.expressaoCargoField;
            }
            set {
                this.expressaoCargoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string ExpressaoTratamento {
            get {
                return this.expressaoTratamentoField;
            }
            set {
                this.expressaoTratamentoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string ExpressaoVocativo {
            get {
                return this.expressaoVocativoField;
            }
            set {
                this.expressaoVocativoField = value;
            }
        }
        
        /// <remarks/>
        public string Cpf {
            get {
                return this.cpfField;
            }
            set {
                this.cpfField = value;
            }
        }
        
        /// <remarks/>
        public string Cnpj {
            get {
                return this.cnpjField;
            }
            set {
                this.cnpjField = value;
            }
        }
        
        /// <remarks/>
        public string Rg {
            get {
                return this.rgField;
            }
            set {
                this.rgField = value;
            }
        }
        
        /// <remarks/>
        public string OrgaoExpedidor {
            get {
                return this.orgaoExpedidorField;
            }
            set {
                this.orgaoExpedidorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string NumeroPassaporte {
            get {
                return this.numeroPassaporteField;
            }
            set {
                this.numeroPassaporteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string IdPaisPassaporte {
            get {
                return this.idPaisPassaporteField;
            }
            set {
                this.idPaisPassaporteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string NomePaisPassaporte {
            get {
                return this.nomePaisPassaporteField;
            }
            set {
                this.nomePaisPassaporteField = value;
            }
        }
        
        /// <remarks/>
        public string Matricula {
            get {
                return this.matriculaField;
            }
            set {
                this.matriculaField = value;
            }
        }
        
        /// <remarks/>
        public string MatriculaOab {
            get {
                return this.matriculaOabField;
            }
            set {
                this.matriculaOabField = value;
            }
        }
        
        /// <remarks/>
        public string TelefoneFixo {
            get {
                return this.telefoneFixoField;
            }
            set {
                this.telefoneFixoField = value;
            }
        }
        
        /// <remarks/>
        public string TelefoneCelular {
            get {
                return this.telefoneCelularField;
            }
            set {
                this.telefoneCelularField = value;
            }
        }
        
        /// <remarks/>
        public string DataNascimento {
            get {
                return this.dataNascimentoField;
            }
            set {
                this.dataNascimentoField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string SitioInternet {
            get {
                return this.sitioInternetField;
            }
            set {
                this.sitioInternetField = value;
            }
        }
        
        /// <remarks/>
        public string Observacao {
            get {
                return this.observacaoField;
            }
            set {
                this.observacaoField = value;
            }
        }
        
        /// <remarks/>
        public string SinAtivo {
            get {
                return this.sinAtivoField;
            }
            set {
                this.sinAtivoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="Sei")]
    public partial class RetornoInclusaoDocumento {
        
        private string idDocumentoField;
        
        private string documentoFormatadoField;
        
        private string linkAcessoField;
        
        /// <remarks/>
        public string IdDocumento {
            get {
                return this.idDocumentoField;
            }
            set {
                this.idDocumentoField = value;
            }
        }
        
        /// <remarks/>
        public string DocumentoFormatado {
            get {
                return this.documentoFormatadoField;
            }
            set {
                this.documentoFormatadoField = value;
            }
        }
        
        /// <remarks/>
        public string LinkAcesso {
            get {
                return this.linkAcessoField;
            }
            set {
                this.linkAcessoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="Sei")]
    public partial class RetornoGeracaoProcedimento {
        
        private string idProcedimentoField;
        
        private string procedimentoFormatadoField;
        
        private string linkAcessoField;
        
        private RetornoInclusaoDocumento[] retornoInclusaoDocumentosField;
        
        /// <remarks/>
        public string IdProcedimento {
            get {
                return this.idProcedimentoField;
            }
            set {
                this.idProcedimentoField = value;
            }
        }
        
        /// <remarks/>
        public string ProcedimentoFormatado {
            get {
                return this.procedimentoFormatadoField;
            }
            set {
                this.procedimentoFormatadoField = value;
            }
        }
        
        /// <remarks/>
        public string LinkAcesso {
            get {
                return this.linkAcessoField;
            }
            set {
                this.linkAcessoField = value;
            }
        }
        
        /// <remarks/>
        public RetornoInclusaoDocumento[] RetornoInclusaoDocumentos {
            get {
                return this.retornoInclusaoDocumentosField;
            }
            set {
                this.retornoInclusaoDocumentosField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="Sei")]
    public partial class Destinatario {
        
        private string siglaField;
        
        private string nomeField;
        
        /// <remarks/>
        public string Sigla {
            get {
                return this.siglaField;
            }
            set {
                this.siglaField = value;
            }
        }
        
        /// <remarks/>
        public string Nome {
            get {
                return this.nomeField;
            }
            set {
                this.nomeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="Sei")]
    public partial class Remetente {
        
        private string siglaField;
        
        private string nomeField;
        
        /// <remarks/>
        public string Sigla {
            get {
                return this.siglaField;
            }
            set {
                this.siglaField = value;
            }
        }
        
        /// <remarks/>
        public string Nome {
            get {
                return this.nomeField;
            }
            set {
                this.nomeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="Sei")]
    public partial class Documento {
        
        private string tipoField;
        
        private string idProcedimentoField;
        
        private string protocoloProcedimentoField;
        
        private string idSerieField;
        
        private string numeroField;
        
        private string dataField;
        
        private string descricaoField;
        
        private string idTipoConferenciaField;
        
        private Remetente remetenteField;
        
        private Interessado[] interessadosField;
        
        private Destinatario[] destinatariosField;
        
        private string observacaoField;
        
        private string nomeArquivoField;
        
        private string nivelAcessoField;
        
        private string idHipoteseLegalField;
        
        private string conteudoField;
        
        private byte[] conteudoMTOMField;
        
        private string idArquivoField;
        
        private Campo[] camposField;
        
        private string sinBloqueadoField;
        
        /// <remarks/>
        public string Tipo {
            get {
                return this.tipoField;
            }
            set {
                this.tipoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string IdProcedimento {
            get {
                return this.idProcedimentoField;
            }
            set {
                this.idProcedimentoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string ProtocoloProcedimento {
            get {
                return this.protocoloProcedimentoField;
            }
            set {
                this.protocoloProcedimentoField = value;
            }
        }
        
        /// <remarks/>
        public string IdSerie {
            get {
                return this.idSerieField;
            }
            set {
                this.idSerieField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string Numero {
            get {
                return this.numeroField;
            }
            set {
                this.numeroField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string Data {
            get {
                return this.dataField;
            }
            set {
                this.dataField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string Descricao {
            get {
                return this.descricaoField;
            }
            set {
                this.descricaoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string IdTipoConferencia {
            get {
                return this.idTipoConferenciaField;
            }
            set {
                this.idTipoConferenciaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public Remetente Remetente {
            get {
                return this.remetenteField;
            }
            set {
                this.remetenteField = value;
            }
        }
        
        /// <remarks/>
        public Interessado[] Interessados {
            get {
                return this.interessadosField;
            }
            set {
                this.interessadosField = value;
            }
        }
        
        /// <remarks/>
        public Destinatario[] Destinatarios {
            get {
                return this.destinatariosField;
            }
            set {
                this.destinatariosField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string Observacao {
            get {
                return this.observacaoField;
            }
            set {
                this.observacaoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string NomeArquivo {
            get {
                return this.nomeArquivoField;
            }
            set {
                this.nomeArquivoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string NivelAcesso {
            get {
                return this.nivelAcessoField;
            }
            set {
                this.nivelAcessoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string IdHipoteseLegal {
            get {
                return this.idHipoteseLegalField;
            }
            set {
                this.idHipoteseLegalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string Conteudo {
            get {
                return this.conteudoField;
            }
            set {
                this.conteudoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="base64Binary", IsNullable=true)]
        public byte[] ConteudoMTOM {
            get {
                return this.conteudoMTOMField;
            }
            set {
                this.conteudoMTOMField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string IdArquivo {
            get {
                return this.idArquivoField;
            }
            set {
                this.idArquivoField = value;
            }
        }
        
        /// <remarks/>
        public Campo[] Campos {
            get {
                return this.camposField;
            }
            set {
                this.camposField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string SinBloqueado {
            get {
                return this.sinBloqueadoField;
            }
            set {
                this.sinBloqueadoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void gerarProcedimentoCompletedEventHandler(object sender, gerarProcedimentoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class gerarProcedimentoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal gerarProcedimentoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RetornoGeracaoProcedimento Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RetornoGeracaoProcedimento)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void incluirDocumentoCompletedEventHandler(object sender, incluirDocumentoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class incluirDocumentoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal incluirDocumentoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RetornoInclusaoDocumento Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RetornoInclusaoDocumento)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void listarUnidadesCompletedEventHandler(object sender, listarUnidadesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listarUnidadesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listarUnidadesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Unidade[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Unidade[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void listarTiposProcedimentoCompletedEventHandler(object sender, listarTiposProcedimentoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listarTiposProcedimentoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listarTiposProcedimentoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TipoProcedimento[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TipoProcedimento[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void listarSeriesCompletedEventHandler(object sender, listarSeriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listarSeriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listarSeriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Serie[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Serie[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void listarContatosCompletedEventHandler(object sender, listarContatosCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listarContatosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listarContatosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Contato[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Contato[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void atualizarContatosCompletedEventHandler(object sender, atualizarContatosCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class atualizarContatosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal atualizarContatosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void consultarProcedimentoCompletedEventHandler(object sender, consultarProcedimentoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class consultarProcedimentoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal consultarProcedimentoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RetornoConsultaProcedimento Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RetornoConsultaProcedimento)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void consultarProcedimentoIndividualCompletedEventHandler(object sender, consultarProcedimentoIndividualCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class consultarProcedimentoIndividualCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal consultarProcedimentoIndividualCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProcedimentoResumido Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProcedimentoResumido)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void consultarDocumentoCompletedEventHandler(object sender, consultarDocumentoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class consultarDocumentoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal consultarDocumentoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RetornoConsultaDocumento Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RetornoConsultaDocumento)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void cancelarDocumentoCompletedEventHandler(object sender, cancelarDocumentoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class cancelarDocumentoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal cancelarDocumentoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void gerarBlocoCompletedEventHandler(object sender, gerarBlocoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class gerarBlocoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal gerarBlocoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void consultarBlocoCompletedEventHandler(object sender, consultarBlocoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class consultarBlocoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal consultarBlocoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RetornoConsultaBloco Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RetornoConsultaBloco)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void excluirBlocoCompletedEventHandler(object sender, excluirBlocoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class excluirBlocoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal excluirBlocoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void excluirProcessoCompletedEventHandler(object sender, excluirProcessoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class excluirProcessoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal excluirProcessoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void excluirDocumentoCompletedEventHandler(object sender, excluirDocumentoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class excluirDocumentoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal excluirDocumentoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void disponibilizarBlocoCompletedEventHandler(object sender, disponibilizarBlocoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class disponibilizarBlocoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal disponibilizarBlocoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void cancelarDisponibilizacaoBlocoCompletedEventHandler(object sender, cancelarDisponibilizacaoBlocoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class cancelarDisponibilizacaoBlocoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal cancelarDisponibilizacaoBlocoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void incluirDocumentoBlocoCompletedEventHandler(object sender, incluirDocumentoBlocoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class incluirDocumentoBlocoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal incluirDocumentoBlocoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void retirarDocumentoBlocoCompletedEventHandler(object sender, retirarDocumentoBlocoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class retirarDocumentoBlocoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal retirarDocumentoBlocoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void incluirProcessoBlocoCompletedEventHandler(object sender, incluirProcessoBlocoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class incluirProcessoBlocoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal incluirProcessoBlocoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void retirarProcessoBlocoCompletedEventHandler(object sender, retirarProcessoBlocoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class retirarProcessoBlocoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal retirarProcessoBlocoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void reabrirProcessoCompletedEventHandler(object sender, reabrirProcessoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class reabrirProcessoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal reabrirProcessoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void concluirProcessoCompletedEventHandler(object sender, concluirProcessoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class concluirProcessoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal concluirProcessoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void listarExtensoesPermitidasCompletedEventHandler(object sender, listarExtensoesPermitidasCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listarExtensoesPermitidasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listarExtensoesPermitidasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ArquivoExtensao[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ArquivoExtensao[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void enviarProcessoCompletedEventHandler(object sender, enviarProcessoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class enviarProcessoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal enviarProcessoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void listarUsuariosCompletedEventHandler(object sender, listarUsuariosCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listarUsuariosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listarUsuariosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Usuario[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Usuario[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void atribuirProcessoCompletedEventHandler(object sender, atribuirProcessoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class atribuirProcessoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal atribuirProcessoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void listarHipotesesLegaisCompletedEventHandler(object sender, listarHipotesesLegaisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listarHipotesesLegaisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listarHipotesesLegaisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HipoteseLegal[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HipoteseLegal[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void listarTiposConferenciaCompletedEventHandler(object sender, listarTiposConferenciaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listarTiposConferenciaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listarTiposConferenciaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TipoConferencia[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TipoConferencia[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void listarPaisesCompletedEventHandler(object sender, listarPaisesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listarPaisesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listarPaisesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Pais[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Pais[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void listarEstadosCompletedEventHandler(object sender, listarEstadosCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listarEstadosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listarEstadosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Estado[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Estado[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void listarCidadesCompletedEventHandler(object sender, listarCidadesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listarCidadesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listarCidadesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Cidade[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Cidade[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void listarCargosCompletedEventHandler(object sender, listarCargosCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listarCargosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listarCargosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Cargo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Cargo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void adicionarArquivoCompletedEventHandler(object sender, adicionarArquivoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class adicionarArquivoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal adicionarArquivoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void adicionarConteudoArquivoCompletedEventHandler(object sender, adicionarConteudoArquivoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class adicionarConteudoArquivoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal adicionarConteudoArquivoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void lancarAndamentoCompletedEventHandler(object sender, lancarAndamentoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class lancarAndamentoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal lancarAndamentoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Andamento Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Andamento)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void listarAndamentosCompletedEventHandler(object sender, listarAndamentosCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listarAndamentosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listarAndamentosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Andamento[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Andamento[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void bloquearProcessoCompletedEventHandler(object sender, bloquearProcessoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class bloquearProcessoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal bloquearProcessoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void desbloquearProcessoCompletedEventHandler(object sender, desbloquearProcessoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class desbloquearProcessoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal desbloquearProcessoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void relacionarProcessoCompletedEventHandler(object sender, relacionarProcessoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class relacionarProcessoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal relacionarProcessoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void removerRelacionamentoProcessoCompletedEventHandler(object sender, removerRelacionamentoProcessoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class removerRelacionamentoProcessoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal removerRelacionamentoProcessoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void sobrestarProcessoCompletedEventHandler(object sender, sobrestarProcessoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sobrestarProcessoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sobrestarProcessoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void removerSobrestamentoProcessoCompletedEventHandler(object sender, removerSobrestamentoProcessoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class removerSobrestamentoProcessoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal removerSobrestamentoProcessoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void anexarProcessoCompletedEventHandler(object sender, anexarProcessoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class anexarProcessoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal anexarProcessoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void desanexarProcessoCompletedEventHandler(object sender, desanexarProcessoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class desanexarProcessoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal desanexarProcessoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void listarMarcadoresUnidadeCompletedEventHandler(object sender, listarMarcadoresUnidadeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listarMarcadoresUnidadeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listarMarcadoresUnidadeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Marcador[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Marcador[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void definirMarcadorCompletedEventHandler(object sender, definirMarcadorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class definirMarcadorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal definirMarcadorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void listarAndamentosMarcadoresCompletedEventHandler(object sender, listarAndamentosMarcadoresCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listarAndamentosMarcadoresCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listarAndamentosMarcadoresCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AndamentoMarcador[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AndamentoMarcador[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void consultarPublicacaoCompletedEventHandler(object sender, consultarPublicacaoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class consultarPublicacaoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal consultarPublicacaoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RetornoConsultaPublicacao Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RetornoConsultaPublicacao)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void agendarPublicacaoCompletedEventHandler(object sender, agendarPublicacaoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class agendarPublicacaoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal agendarPublicacaoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void alterarPublicacaoCompletedEventHandler(object sender, alterarPublicacaoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class alterarPublicacaoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal alterarPublicacaoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void cancelarAgendamentoPublicacaoCompletedEventHandler(object sender, cancelarAgendamentoPublicacaoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class cancelarAgendamentoPublicacaoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal cancelarAgendamentoPublicacaoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void listarFeriadosCompletedEventHandler(object sender, listarFeriadosCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listarFeriadosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listarFeriadosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Feriado[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Feriado[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void confirmarDisponibilizacaoPublicacaoCompletedEventHandler(object sender, confirmarDisponibilizacaoPublicacaoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class confirmarDisponibilizacaoPublicacaoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal confirmarDisponibilizacaoPublicacaoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void enviarEmailCompletedEventHandler(object sender, enviarEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class enviarEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal enviarEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RetornoEnvioEmail Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RetornoEnvioEmail)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591